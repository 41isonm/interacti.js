var gn = Object.defineProperty;
var mn = (e, t, n) => t in e ? gn(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var $e = (e, t, n) => mn(e, typeof t != "symbol" ? t + "" : t, n);
function H() {
}
function dt(e, t) {
  for (const n in t) e[n] = t[n];
  return (
    /** @type {T & S} */
    e
  );
}
function Qt(e) {
  return e();
}
function Et() {
  return /* @__PURE__ */ Object.create(null);
}
function de(e) {
  e.forEach(Qt);
}
function q(e) {
  return typeof e == "function";
}
function Z(e, t) {
  return e != e ? t == t : e !== t || e && typeof e == "object" || typeof e == "function";
}
function pn(e) {
  return Object.keys(e).length === 0;
}
function Zt(e, ...t) {
  if (e == null) {
    for (const o of t)
      o(void 0);
    return H;
  }
  const n = e.subscribe(...t);
  return n.unsubscribe ? () => n.unsubscribe() : n;
}
function et(e, t, n) {
  e.$$.on_destroy.push(Zt(t, n));
}
function yn(e, t, n, o) {
  if (e) {
    const i = xt(e, t, n, o);
    return e[0](i);
  }
}
function xt(e, t, n, o) {
  return e[1] && o ? dt(n.ctx.slice(), e[1](o(t))) : n.ctx;
}
function _n(e, t, n, o) {
  if (e[2] && o) {
    const i = e[2](o(n));
    if (t.dirty === void 0)
      return i;
    if (typeof i == "object") {
      const r = [], s = Math.max(t.dirty.length, i.length);
      for (let l = 0; l < s; l += 1)
        r[l] = t.dirty[l] | i[l];
      return r;
    }
    return t.dirty | i;
  }
  return t.dirty;
}
function wn(e, t, n, o, i, r) {
  if (i) {
    const s = xt(t, n, o, r);
    e.p(s, i);
  }
}
function bn(e) {
  if (e.ctx.length > 32) {
    const t = [], n = e.ctx.length / 32;
    for (let o = 0; o < n; o++)
      t[o] = -1;
    return t;
  }
  return -1;
}
function At(e) {
  const t = {};
  for (const n in e) n[0] !== "$" && (t[n] = e[n]);
  return t;
}
function Ke(e) {
  return e ?? "";
}
function ue(e, t) {
  e.appendChild(t);
}
function O(e, t, n) {
  e.insertBefore(t, n || null);
}
function k(e) {
  e.parentNode && e.parentNode.removeChild(e);
}
function pt(e, t) {
  for (let n = 0; n < e.length; n += 1)
    e[n] && e[n].d(t);
}
function C(e) {
  return document.createElementNS("http://www.w3.org/2000/svg", e);
}
function $t(e) {
  return document.createTextNode(e);
}
function ie() {
  return $t(" ");
}
function le() {
  return $t("");
}
function F(e, t, n, o) {
  return e.addEventListener(t, n, o), () => e.removeEventListener(t, n, o);
}
function d(e, t, n) {
  n == null ? e.removeAttribute(t) : e.getAttribute(t) !== n && e.setAttribute(t, n);
}
function En(e) {
  return Array.from(e.childNodes);
}
function me(e, t, n) {
  e.classList.toggle(t, !!n);
}
function An(e, t, { bubbles: n = !1, cancelable: o = !1 } = {}) {
  return new CustomEvent(e, { detail: t, bubbles: n, cancelable: o });
}
let Xe;
function Ye(e) {
  Xe = e;
}
function en() {
  if (!Xe) throw new Error("Function called outside component initialization");
  return Xe;
}
function Re(e) {
  en().$$.on_mount.push(e);
}
function Me() {
  const e = en();
  return (t, n, { cancelable: o = !1 } = {}) => {
    const i = e.$$.callbacks[t];
    if (i) {
      const r = An(
        /** @type {string} */
        t,
        n,
        { cancelable: o }
      );
      return i.slice().forEach((s) => {
        s.call(e, r);
      }), !r.defaultPrevented;
    }
    return !0;
  };
}
function he(e, t) {
  const n = e.$$.callbacks[t.type];
  n && n.slice().forEach((o) => o.call(this, t));
}
const Ae = [], Je = [];
let ve = [];
const St = [], Sn = /* @__PURE__ */ Promise.resolve();
let ht = !1;
function vn() {
  ht || (ht = !0, Sn.then(tn));
}
function gt(e) {
  ve.push(e);
}
const tt = /* @__PURE__ */ new Set();
let _e = 0;
function tn() {
  if (_e !== 0)
    return;
  const e = Xe;
  do {
    try {
      for (; _e < Ae.length; ) {
        const t = Ae[_e];
        _e++, Ye(t), Tn(t.$$);
      }
    } catch (t) {
      throw Ae.length = 0, _e = 0, t;
    }
    for (Ye(null), Ae.length = 0, _e = 0; Je.length; ) Je.pop()();
    for (let t = 0; t < ve.length; t += 1) {
      const n = ve[t];
      tt.has(n) || (tt.add(n), n());
    }
    ve.length = 0;
  } while (Ae.length);
  for (; St.length; )
    St.pop()();
  ht = !1, tt.clear(), Ye(e);
}
function Tn(e) {
  if (e.fragment !== null) {
    e.update(), de(e.before_update);
    const t = e.dirty;
    e.dirty = [-1], e.fragment && e.fragment.p(e.ctx, t), e.after_update.forEach(gt);
  }
}
function Mn(e) {
  const t = [], n = [];
  ve.forEach((o) => e.indexOf(o) === -1 ? t.push(o) : n.push(o)), n.forEach((o) => o()), ve = t;
}
const We = /* @__PURE__ */ new Set();
let ye;
function re() {
  ye = {
    r: 0,
    c: [],
    p: ye
    // parent group
  };
}
function se() {
  ye.r || de(ye.c), ye = ye.p;
}
function P(e, t) {
  e && e.i && (We.delete(e), e.i(t));
}
function R(e, t, n, o) {
  if (e && e.o) {
    if (We.has(e)) return;
    We.add(e), ye.c.push(() => {
      We.delete(e), o && (n && e.d(1), o());
    }), e.o(t);
  } else o && o();
}
function Te(e) {
  return (e == null ? void 0 : e.length) !== void 0 ? e : Array.from(e);
}
function te(e) {
  e && e.c();
}
function x(e, t, n) {
  const { fragment: o, after_update: i } = e.$$;
  o && o.m(t, n), gt(() => {
    const r = e.$$.on_mount.map(Qt).filter(q);
    e.$$.on_destroy ? e.$$.on_destroy.push(...r) : de(r), e.$$.on_mount = [];
  }), i.forEach(gt);
}
function $(e, t) {
  const n = e.$$;
  n.fragment !== null && (Mn(n.after_update), de(n.on_destroy), n.fragment && n.fragment.d(t), n.on_destroy = n.fragment = null, n.ctx = []);
}
function Ln(e, t) {
  e.$$.dirty[0] === -1 && (Ae.push(e), vn(), e.$$.dirty.fill(0)), e.$$.dirty[t / 31 | 0] |= 1 << t % 31;
}
function ne(e, t, n, o, i, r, s = null, l = [-1]) {
  const a = Xe;
  Ye(e);
  const c = e.$$ = {
    fragment: null,
    ctx: [],
    // state
    props: r,
    update: H,
    not_equal: i,
    bound: Et(),
    // lifecycle
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(t.context || (a ? a.$$.context : [])),
    // everything else
    callbacks: Et(),
    dirty: l,
    skip_bound: !1,
    root: t.target || a.$$.root
  };
  s && s(c.root);
  let u = !1;
  if (c.ctx = n ? n(e, t.props || {}, (f, g, ...h) => {
    const m = h.length ? h[0] : g;
    return c.ctx && i(c.ctx[f], c.ctx[f] = m) && (!c.skip_bound && c.bound[f] && c.bound[f](m), u && Ln(e, f)), g;
  }) : [], c.update(), u = !0, de(c.before_update), c.fragment = o ? o(c.ctx) : !1, t.target) {
    if (t.hydrate) {
      const f = En(t.target);
      c.fragment && c.fragment.l(f), f.forEach(k);
    } else
      c.fragment && c.fragment.c();
    t.intro && P(e.$$.fragment), x(e, t.target, t.anchor), tn();
  }
  Ye(a);
}
class oe {
  constructor() {
    /**
     * ### PRIVATE API
     *
     * Do not use, may change at any time
     *
     * @type {any}
     */
    $e(this, "$$");
    /**
     * ### PRIVATE API
     *
     * Do not use, may change at any time
     *
     * @type {any}
     */
    $e(this, "$$set");
  }
  /** @returns {void} */
  $destroy() {
    $(this, 1), this.$destroy = H;
  }
  /**
   * @template {Extract<keyof Events, string>} K
   * @param {K} type
   * @param {((e: Events[K]) => void) | null | undefined} callback
   * @returns {() => void}
   */
  $on(t, n) {
    if (!q(n))
      return H;
    const o = this.$$.callbacks[t] || (this.$$.callbacks[t] = []);
    return o.push(n), () => {
      const i = o.indexOf(n);
      i !== -1 && o.splice(i, 1);
    };
  }
  /**
   * @param {Partial<Props>} props
   * @returns {void}
   */
  $set(t) {
    this.$$set && !pn(t) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1);
  }
}
const kn = "4";
typeof window < "u" && (window.__svelte || (window.__svelte = { v: /* @__PURE__ */ new Set() })).v.add(kn);
var W = /* @__PURE__ */ ((e) => (e.ELLIPSE = "ELLIPSE", e.POLYGON = "POLYGON", e.RECTANGLE = "RECTANGLE", e))(W || {});
const yt = {}, _t = (e, t) => yt[e] = t, mt = (e) => yt[e.type].area(e), In = (e, t, n) => yt[e.type].intersects(e, t, n), Qe = (e) => {
  let t = 1 / 0, n = 1 / 0, o = -1 / 0, i = -1 / 0;
  return e.forEach(([r, s]) => {
    t = Math.min(t, r), n = Math.min(n, s), o = Math.max(o, r), i = Math.max(i, s);
  }), { minX: t, minY: n, maxX: o, maxY: i };
}, On = {
  area: (e) => Math.PI * e.geometry.rx * e.geometry.ry,
  intersects: (e, t, n) => {
    const { cx: o, cy: i, rx: r, ry: s } = e.geometry, l = 0, a = Math.cos(l), c = Math.sin(l), u = t - o, f = n - i, g = a * u + c * f, h = c * u - a * f;
    return g * g / (r * r) + h * h / (s * s) <= 1;
  }
};
_t(W.ELLIPSE, On);
const Bn = {
  area: (e) => {
    const { points: t } = e.geometry;
    let n = 0, o = t.length - 1;
    for (let i = 0; i < t.length; i++)
      n += (t[o][0] + t[i][0]) * (t[o][1] - t[i][1]), o = i;
    return Math.abs(0.5 * n);
  },
  intersects: (e, t, n) => {
    const { points: o } = e.geometry;
    let i = !1;
    for (let r = 0, s = o.length - 1; r < o.length; s = r++) {
      const l = o[r][0], a = o[r][1], c = o[s][0], u = o[s][1];
      a > n != u > n && t < (c - l) * (n - a) / (u - a) + l && (i = !i);
    }
    return i;
  }
};
_t(W.POLYGON, Bn);
const Pn = {
  area: (e) => e.geometry.w * e.geometry.h,
  intersects: (e, t, n) => t >= e.geometry.x && t <= e.geometry.x + e.geometry.w && n >= e.geometry.y && n <= e.geometry.y + e.geometry.h
};
_t(W.RECTANGLE, Pn);
const Ze = (e) => qe(e.target), qe = (e) => {
  var t, n;
  return (e == null ? void 0 : e.annotation) !== void 0 && ((n = (t = e == null ? void 0 : e.selector) == null ? void 0 : t.geometry) == null ? void 0 : n.bounds) !== void 0;
}, Dn = (e, t = !1) => {
  const n = typeof e == "string" ? e : e.value, o = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g, i = [...n.matchAll(o)][0], [r, s, l, a, c, u, f] = i;
  if (s !== "xywh") throw new Error("Unsupported MediaFragment: " + n);
  if (l && l !== "pixel") throw new Error(`Unsupported MediaFragment unit: ${l}`);
  const [g, h, m, y] = [a, c, u, f].map(parseFloat);
  return {
    type: W.RECTANGLE,
    geometry: {
      x: g,
      y: h,
      w: m,
      h: y,
      bounds: {
        minX: g,
        minY: t ? h - y : h,
        maxX: g + m,
        maxY: t ? h : h + y
      }
    }
  };
}, Yn = (e) => {
  const { x: t, y: n, w: o, h: i } = e;
  return {
    type: "FragmentSelector",
    conformsTo: "http://www.w3.org/TR/media-frags/",
    value: `xywh=pixel:${t},${n},${o},${i}`
  };
}, nn = "http://www.w3.org/2000/svg", vt = (e) => {
  const t = (o) => {
    Array.from(o.attributes).forEach((i) => {
      i.name.startsWith("on") && o.removeAttribute(i.name);
    });
  }, n = e.getElementsByTagName("script");
  return Array.from(n).reverse().forEach((o) => o.parentNode.removeChild(o)), Array.from(e.querySelectorAll("*")).forEach(t), e;
}, Xn = (e) => {
  const o = new XMLSerializer().serializeToString(e.documentElement).replace("<svg>", `<svg xmlns="${nn}">`);
  return new DOMParser().parseFromString(o, "image/svg+xml").documentElement;
}, Rn = (e) => {
  const n = new DOMParser().parseFromString(e, "image/svg+xml"), o = n.lookupPrefix(nn), i = n.lookupNamespaceURI(null);
  return o || i ? vt(n).firstChild : vt(Xn(n)).firstChild;
}, Cn = (e) => {
  const [t, n, o] = e.match(/(<polygon points=["|'])([^("|')]*)/) || [], i = o.split(" ").map((r) => r.split(",").map(parseFloat));
  return {
    type: W.POLYGON,
    geometry: {
      points: i,
      bounds: Qe(i)
    }
  };
}, Nn = (e) => {
  const t = Rn(e), n = parseFloat(t.getAttribute("cx")), o = parseFloat(t.getAttribute("cy")), i = parseFloat(t.getAttribute("rx")), r = parseFloat(t.getAttribute("ry")), s = {
    minX: n - i,
    minY: o - r,
    maxX: n + i,
    maxY: o + r
  };
  return {
    type: W.ELLIPSE,
    geometry: {
      cx: n,
      cy: o,
      rx: i,
      ry: r,
      bounds: s
    }
  };
}, Un = (e) => {
  const t = typeof e == "string" ? e : e.value;
  if (t.includes("<polygon points="))
    return Cn(t);
  if (t.includes("<ellipse "))
    return Nn(t);
  throw "Unsupported SVG shape: " + t;
}, Vn = (e) => {
  let t;
  if (e.type === W.POLYGON) {
    const n = e.geometry, { points: o } = n;
    t = `<svg><polygon points="${o.map((i) => i.join(",")).join(" ")}" /></svg>`;
  } else if (e.type === W.ELLIPSE) {
    const n = e.geometry;
    t = `<svg><ellipse cx="${n.cx}" cy="${n.cy}" rx="${n.rx}" ry="${n.ry}" /></svg>`;
  }
  if (t)
    return { type: "SvgSelector", value: t };
  throw `Unsupported shape type: ${e.type}`;
};
var J = [];
for (var nt = 0; nt < 256; ++nt)
  J.push((nt + 256).toString(16).slice(1));
function Gn(e, t = 0) {
  return (J[e[t + 0]] + J[e[t + 1]] + J[e[t + 2]] + J[e[t + 3]] + "-" + J[e[t + 4]] + J[e[t + 5]] + "-" + J[e[t + 6]] + J[e[t + 7]] + "-" + J[e[t + 8]] + J[e[t + 9]] + "-" + J[e[t + 10]] + J[e[t + 11]] + J[e[t + 12]] + J[e[t + 13]] + J[e[t + 14]] + J[e[t + 15]]).toLowerCase();
}
var Ge, jn = new Uint8Array(16);
function zn() {
  if (!Ge && (Ge = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !Ge))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return Ge(jn);
}
var Hn = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
const Tt = {
  randomUUID: Hn
};
function on(e, t, n) {
  if (Tt.randomUUID && !t && !e)
    return Tt.randomUUID();
  e = e || {};
  var o = e.random || (e.rng || zn)();
  return o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, Gn(o);
}
var Mt = Object.prototype.hasOwnProperty;
function pe(e, t) {
  var n, o;
  if (e === t) return !0;
  if (e && t && (n = e.constructor) === t.constructor) {
    if (n === Date) return e.getTime() === t.getTime();
    if (n === RegExp) return e.toString() === t.toString();
    if (n === Array) {
      if ((o = e.length) === t.length)
        for (; o-- && pe(e[o], t[o]); ) ;
      return o === -1;
    }
    if (!n || typeof e == "object") {
      o = 0;
      for (n in e)
        if (Mt.call(e, n) && ++o && !Mt.call(t, n) || !(n in t) || !pe(e[n], t[n])) return !1;
      return Object.keys(t).length === o;
    }
  }
  return e !== e && t !== t;
}
function ot() {
}
function Fn(e, t) {
  return e != e ? t == t : e !== t || e && typeof e == "object" || typeof e == "function";
}
const we = [];
function wt(e, t = ot) {
  let n;
  const o = /* @__PURE__ */ new Set();
  function i(l) {
    if (Fn(e, l) && (e = l, n)) {
      const a = !we.length;
      for (const c of o)
        c[1](), we.push(c, e);
      if (a) {
        for (let c = 0; c < we.length; c += 2)
          we[c][0](we[c + 1]);
        we.length = 0;
      }
    }
  }
  function r(l) {
    i(l(e));
  }
  function s(l, a = ot) {
    const c = [l, a];
    return o.add(c), o.size === 1 && (n = t(i, r) || ot), l(e), () => {
      o.delete(c), o.size === 0 && n && (n(), n = null);
    };
  }
  return { set: i, update: r, subscribe: s };
}
const Wn = (e) => {
  const { subscribe: t, set: n } = wt();
  let o;
  return t((i) => o = i), e.observe(({ changes: i }) => {
    if (o) {
      (i.deleted || []).some((s) => s.id === o) && n(void 0);
      const r = (i.updated || []).find(({ oldValue: s }) => s.id === o);
      r && n(r.newValue.id);
    }
  }), {
    get current() {
      return o;
    },
    subscribe: t,
    set: n
  };
};
var rn = /* @__PURE__ */ ((e) => (e.EDIT = "EDIT", e.SELECT = "SELECT", e.NONE = "NONE", e))(rn || {});
const je = { selected: [] }, qn = (e, t) => {
  const { subscribe: n, set: o } = wt(je);
  let i = t, r = je;
  n((h) => r = h);
  const s = () => {
    pe(r, je) || o(je);
  }, l = () => {
    var h;
    return ((h = r.selected) == null ? void 0 : h.length) === 0;
  }, a = (h) => {
    if (l())
      return !1;
    const m = typeof h == "string" ? h : h.id;
    return r.selected.some((y) => y.id === m);
  }, c = (h, m) => {
    const y = e.getAnnotation(h);
    if (!y) {
      console.warn("Invalid selection: " + h);
      return;
    }
    switch (Lt(y, i)) {
      case "EDIT":
        o({ selected: [{ id: h, editable: !0 }], event: m });
        break;
      case "SELECT":
        o({ selected: [{ id: h }], event: m });
        break;
      default:
        o({ selected: [], event: m });
    }
  }, u = (h, m) => {
    const y = Array.isArray(h) ? h : [h], T = y.map((p) => e.getAnnotation(p)).filter((p) => !!p);
    o({
      selected: T.map((p) => {
        const w = m === void 0 ? Lt(p, i) === "EDIT" : m;
        return { id: p.id, editable: w };
      })
    }), T.length !== y.length && console.warn("Invalid selection", h);
  }, f = (h) => {
    if (l())
      return !1;
    const { selected: m } = r;
    m.some(({ id: y }) => h.includes(y)) && o({ selected: m.filter(({ id: y }) => !h.includes(y)) });
  }, g = (h) => i = h;
  return e.observe(
    ({ changes: h }) => f((h.deleted || []).map((m) => m.id))
  ), {
    get event() {
      return r ? r.event : null;
    },
    get selected() {
      return r ? [...r.selected] : null;
    },
    get userSelectAction() {
      return i;
    },
    clear: s,
    isEmpty: l,
    isSelected: a,
    setSelected: u,
    setUserSelectAction: g,
    subscribe: n,
    userSelect: c
  };
}, Lt = (e, t) => typeof t == "function" ? t(e) : t || "EDIT";
var Q = [];
for (var it = 0; it < 256; ++it)
  Q.push((it + 256).toString(16).slice(1));
function Kn(e, t = 0) {
  return (Q[e[t + 0]] + Q[e[t + 1]] + Q[e[t + 2]] + Q[e[t + 3]] + "-" + Q[e[t + 4]] + Q[e[t + 5]] + "-" + Q[e[t + 6]] + Q[e[t + 7]] + "-" + Q[e[t + 8]] + Q[e[t + 9]] + "-" + Q[e[t + 10]] + Q[e[t + 11]] + Q[e[t + 12]] + Q[e[t + 13]] + Q[e[t + 14]] + Q[e[t + 15]]).toLowerCase();
}
var ze, Jn = new Uint8Array(16);
function Qn() {
  if (!ze && (ze = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !ze))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return ze(Jn);
}
var Zn = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
const kt = {
  randomUUID: Zn
};
function xn(e, t, n) {
  if (kt.randomUUID && !t && !e)
    return kt.randomUUID();
  e = e || {};
  var o = e.random || (e.rng || Qn)();
  return o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, Kn(o);
}
const rt = (e) => {
  const t = (n) => {
    const o = { ...n };
    return n.created && typeof n.created == "string" && (o.created = new Date(n.created)), n.updated && typeof n.updated == "string" && (o.updated = new Date(n.updated)), o;
  };
  return {
    ...e,
    bodies: (e.bodies || []).map(t),
    target: t(e.target)
  };
}, $n = (e, t) => {
  const n = new Set(e.bodies.map((o) => o.id));
  return t.bodies.filter((o) => !n.has(o.id));
}, eo = (e, t) => {
  const n = new Set(t.bodies.map((o) => o.id));
  return e.bodies.filter((o) => !n.has(o.id));
}, to = (e, t) => t.bodies.map((n) => {
  const o = e.bodies.find((i) => i.id === n.id);
  return { newBody: n, oldBody: o && !pe(o, n) ? o : void 0 };
}).filter(({ oldBody: n }) => n).map(({ oldBody: n, newBody: o }) => ({ oldBody: n, newBody: o })), no = (e, t) => !pe(e.target, t.target), sn = (e, t) => {
  const n = $n(e, t), o = eo(e, t), i = to(e, t);
  return {
    oldValue: e,
    newValue: t,
    bodiesCreated: n.length > 0 ? n : void 0,
    bodiesDeleted: o.length > 0 ? o : void 0,
    bodiesUpdated: i.length > 0 ? i : void 0,
    targetUpdated: no(e, t) ? { oldTarget: e.target, newTarget: t.target } : void 0
  };
};
var z = /* @__PURE__ */ ((e) => (e.LOCAL = "LOCAL", e.REMOTE = "REMOTE", e.SILENT = "SILENT", e))(z || {});
const oo = (e, t) => {
  var n, o;
  const { changes: i, origin: r } = t;
  if (!(e.options.origin ? e.options.origin === r : r !== "SILENT"))
    return !1;
  if (e.options.ignore) {
    const { ignore: s } = e.options, l = (a) => a && a.length > 0;
    if (!(l(i.created) || l(i.deleted))) {
      const a = (n = i.updated) == null ? void 0 : n.some((u) => l(u.bodiesCreated) || l(u.bodiesDeleted) || l(u.bodiesUpdated)), c = (o = i.updated) == null ? void 0 : o.some((u) => u.targetUpdated);
      if (s === "BODY_ONLY" && a && !c || s === "TARGET_ONLY" && c && !a)
        return !1;
    }
  }
  if (e.options.annotations) {
    const s = /* @__PURE__ */ new Set([
      ...(i.created || []).map((l) => l.id),
      ...(i.deleted || []).map((l) => l.id),
      ...(i.updated || []).map(({ oldValue: l }) => l.id)
    ]);
    return !!(Array.isArray(e.options.annotations) ? e.options.annotations : [e.options.annotations]).find((l) => s.has(l));
  } else
    return !0;
}, io = (e, t) => {
  const n = new Set((e.created || []).map((f) => f.id)), o = new Set((e.updated || []).map(({ newValue: f }) => f.id)), i = new Set((t.created || []).map((f) => f.id)), r = new Set((t.deleted || []).map((f) => f.id)), s = new Set((t.updated || []).map(({ oldValue: f }) => f.id)), l = new Set((t.updated || []).filter(({ oldValue: f }) => n.has(f.id) || o.has(f.id)).map(({ oldValue: f }) => f.id)), a = [
    ...(e.created || []).filter((f) => !r.has(f.id)).map((f) => s.has(f.id) ? t.updated.find(({ oldValue: g }) => g.id === f.id).newValue : f),
    ...t.created || []
  ], c = [
    ...(e.deleted || []).filter((f) => !i.has(f.id)),
    ...(t.deleted || []).filter((f) => !n.has(f.id))
  ], u = [
    ...(e.updated || []).filter(({ newValue: f }) => !r.has(f.id)).map((f) => {
      const { oldValue: g, newValue: h } = f;
      if (s.has(h.id)) {
        const m = t.updated.find((y) => y.oldValue.id === h.id).newValue;
        return sn(g, m);
      } else
        return f;
    }),
    ...(t.updated || []).filter(({ oldValue: f }) => !l.has(f.id))
  ];
  return { created: a, deleted: c, updated: u };
}, st = (e) => {
  const t = e.id === void 0 ? xn() : e.id;
  return {
    ...e,
    id: t,
    bodies: e.bodies === void 0 ? [] : e.bodies.map((n) => ({
      ...n,
      annotation: t
    })),
    target: {
      ...e.target,
      annotation: t
    }
  };
}, ro = (e) => e.id !== void 0, so = () => {
  const e = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ new Map(), n = [], o = (E, A = {}) => {
    n.push({ onChange: E, options: A });
  }, i = (E) => {
    const A = n.findIndex((S) => S.onChange == E);
    A > -1 && n.splice(A, 1);
  }, r = (E, A) => {
    const S = {
      origin: E,
      changes: {
        created: A.created || [],
        updated: A.updated || [],
        deleted: A.deleted || []
      },
      state: [...e.values()]
    };
    n.forEach((v) => {
      oo(v, S) && v.onChange(S);
    });
  }, s = (E, A = z.LOCAL) => {
    if (E.id && e.get(E.id))
      throw Error(`Cannot add annotation ${E.id} - exists already`);
    {
      const S = st(E);
      e.set(S.id, S), S.bodies.forEach((v) => t.set(v.id, S.id)), r(A, { created: [S] });
    }
  }, l = (E, A) => {
    const S = st(typeof E == "string" ? A : E), v = typeof E == "string" ? E : E.id, N = v && e.get(v);
    if (N) {
      const X = sn(N, S);
      return v === S.id ? e.set(v, S) : (e.delete(v), e.set(S.id, S)), N.bodies.forEach((K) => t.delete(K.id)), S.bodies.forEach((K) => t.set(K.id, S.id)), X;
    } else
      console.warn(`Cannot update annotation ${v} - does not exist`);
  }, a = (E, A = z.LOCAL, S = z.LOCAL) => {
    const v = ro(A) ? S : A, N = l(E, A);
    N && r(v, { updated: [N] });
  }, c = (E, A = z.LOCAL) => {
    const S = E.reduce((v, N) => {
      const X = l(N);
      return X ? [...v, X] : v;
    }, []);
    S.length > 0 && r(A, { updated: S });
  }, u = (E, A = z.LOCAL) => {
    const S = e.get(E.annotation);
    if (S) {
      const v = {
        ...S,
        bodies: [...S.bodies, E]
      };
      e.set(S.id, v), t.set(E.id, v.id), r(A, { updated: [{
        oldValue: S,
        newValue: v,
        bodiesCreated: [E]
      }] });
    } else
      console.warn(`Attempt to add body to missing annotation: ${E.annotation}`);
  }, f = () => [...e.values()], g = (E = z.LOCAL) => {
    const A = [...e.values()];
    e.clear(), t.clear(), r(E, { deleted: A });
  }, h = (E, A = !0, S = z.LOCAL) => {
    const v = E.map(st);
    if (A) {
      const N = [...e.values()];
      e.clear(), t.clear(), v.forEach((X) => {
        e.set(X.id, X), X.bodies.forEach((K) => t.set(K.id, X.id));
      }), r(S, { created: v, deleted: N });
    } else {
      const N = E.reduce((X, K) => {
        const ge = K.id && e.get(K.id);
        return ge ? [...X, ge] : X;
      }, []);
      if (N.length > 0)
        throw Error(`Bulk insert would overwrite the following annotations: ${N.map((X) => X.id).join(", ")}`);
      v.forEach((X) => {
        e.set(X.id, X), X.bodies.forEach((K) => t.set(K.id, X.id));
      }), r(S, { created: v });
    }
  }, m = (E) => {
    const A = typeof E == "string" ? E : E.id, S = e.get(A);
    if (S)
      return e.delete(A), S.bodies.forEach((v) => t.delete(v.id)), S;
    console.warn(`Attempt to delete missing annotation: ${A}`);
  }, y = (E, A = z.LOCAL) => {
    const S = m(E);
    S && r(A, { deleted: [S] });
  }, T = (E, A = z.LOCAL) => {
    const S = E.reduce((v, N) => {
      const X = m(N);
      return X ? [...v, X] : v;
    }, []);
    S.length > 0 && r(A, { deleted: S });
  }, p = (E) => {
    const A = e.get(E.annotation);
    if (A) {
      const S = A.bodies.find((v) => v.id === E.id);
      if (S) {
        t.delete(S.id);
        const v = {
          ...A,
          bodies: A.bodies.filter((N) => N.id !== E.id)
        };
        return e.set(A.id, v), {
          oldValue: A,
          newValue: v,
          bodiesDeleted: [S]
        };
      } else
        console.warn(`Attempt to delete missing body ${E.id} from annotation ${E.annotation}`);
    } else
      console.warn(`Attempt to delete body from missing annotation ${E.annotation}`);
  }, w = (E, A = z.LOCAL) => {
    const S = p(E);
    S && r(A, { updated: [S] });
  }, _ = (E, A = z.LOCAL) => {
    const S = E.map((v) => p(v)).filter(Boolean);
    S.length > 0 && r(A, { updated: S });
  }, b = (E) => {
    const A = e.get(E);
    return A ? { ...A } : void 0;
  }, I = (E) => {
    const A = t.get(E);
    if (A) {
      const S = b(A).bodies.find((v) => v.id === E);
      if (S)
        return S;
      console.error(`Store integrity error: body ${E} in index, but not in annotation`);
    } else
      console.warn(`Attempt to retrieve missing body: ${E}`);
  }, U = (E, A) => {
    if (E.annotation !== A.annotation)
      throw "Annotation integrity violation: annotation ID must be the same when updating bodies";
    const S = e.get(E.annotation);
    if (S) {
      const v = S.bodies.find((X) => X.id === E.id), N = {
        ...S,
        bodies: S.bodies.map((X) => X.id === v.id ? A : X)
      };
      return e.set(S.id, N), v.id !== A.id && (t.delete(v.id), t.set(A.id, N.id)), {
        oldValue: S,
        newValue: N,
        bodiesUpdated: [{ oldBody: v, newBody: A }]
      };
    } else
      console.warn(`Attempt to add body to missing annotation ${E.annotation}`);
  }, V = (E, A, S = z.LOCAL) => {
    const v = U(E, A);
    v && r(S, { updated: [v] });
  }, G = (E, A = z.LOCAL) => {
    const S = E.map((v) => U({ id: v.id, annotation: v.annotation }, v)).filter(Boolean);
    r(A, { updated: S });
  }, D = (E) => {
    const A = e.get(E.annotation);
    if (A) {
      const S = {
        ...A,
        target: {
          ...A.target,
          ...E
        }
      };
      return e.set(A.id, S), {
        oldValue: A,
        newValue: S,
        targetUpdated: {
          oldTarget: A.target,
          newTarget: E
        }
      };
    } else
      console.warn(`Attempt to update target on missing annotation: ${E.annotation}`);
  };
  return {
    addAnnotation: s,
    addBody: u,
    all: f,
    bulkAddAnnotation: h,
    bulkDeleteAnnotation: T,
    bulkDeleteBodies: _,
    bulkUpdateAnnotation: c,
    bulkUpdateBodies: G,
    bulkUpdateTargets: (E, A = z.LOCAL) => {
      const S = E.map((v) => D(v)).filter(Boolean);
      S.length > 0 && r(A, { updated: S });
    },
    clear: g,
    deleteAnnotation: y,
    deleteBody: w,
    getAnnotation: b,
    getBody: I,
    observe: o,
    unobserve: i,
    updateAnnotation: a,
    updateBody: V,
    updateTarget: (E, A = z.LOCAL) => {
      const S = D(E);
      S && r(A, { updated: [S] });
    }
  };
}, lo = (e) => ({
  ...e,
  subscribe: (t) => {
    const n = (o) => t(o.state);
    return e.observe(n), t(e.all()), () => e.unobserve(n);
  }
});
let ao = () => ({
  emit(e, ...t) {
    for (let n = 0, o = this.events[e] || [], i = o.length; n < i; n++)
      o[n](...t);
  },
  events: {},
  on(e, t) {
    var n;
    return ((n = this.events)[e] || (n[e] = [])).push(t), () => {
      var o;
      this.events[e] = (o = this.events[e]) == null ? void 0 : o.filter((i) => t !== i);
    };
  }
});
const co = 250, fo = (e) => {
  const t = ao(), n = [];
  let o = -1, i = !1, r = 0;
  const s = (h) => {
    if (!i) {
      const { changes: m } = h, y = performance.now();
      if (y - r > co)
        n.splice(o + 1), n.push(m), o = n.length - 1;
      else {
        const T = n.length - 1;
        n[T] = io(n[T], m);
      }
      r = y;
    }
    i = !1;
  };
  e.observe(s, { origin: z.LOCAL });
  const l = (h) => h && h.length > 0 && e.bulkDeleteAnnotation(h), a = (h) => h && h.length > 0 && e.bulkAddAnnotation(h, !1), c = (h) => h && h.length > 0 && e.bulkUpdateAnnotation(h.map(({ oldValue: m }) => m)), u = (h) => h && h.length > 0 && e.bulkUpdateAnnotation(h.map(({ newValue: m }) => m)), f = (h) => h && h.length > 0 && e.bulkAddAnnotation(h, !1), g = (h) => h && h.length > 0 && e.bulkDeleteAnnotation(h);
  return {
    canRedo: () => n.length - 1 > o,
    canUndo: () => o > -1,
    destroy: () => e.unobserve(s),
    on: (h, m) => t.on(h, m),
    redo: () => {
      if (n.length - 1 > o) {
        i = !0;
        const { created: h, updated: m, deleted: y } = n[o + 1];
        a(h), u(m), g(y), t.emit("redo", n[o + 1]), o += 1;
      }
    },
    undo: () => {
      if (o > -1) {
        i = !0;
        const { created: h, updated: m, deleted: y } = n[o];
        l(h), c(m), f(y), t.emit("undo", n[o]), o -= 1;
      }
    }
  };
}, uo = () => {
  const { subscribe: e, set: t } = wt([]);
  return {
    subscribe: e,
    set: t
  };
}, ho = (e, t, n, o) => {
  const { store: i, selection: r, hover: s, viewport: l } = e, a = /* @__PURE__ */ new Map();
  let c = [], u, f;
  const g = (p, w) => {
    a.has(p) ? a.get(p).push(w) : a.set(p, [w]);
  }, h = (p, w) => {
    const _ = a.get(p);
    if (_) {
      const b = _.indexOf(w);
      b !== -1 && _.splice(b, 1);
    }
  }, m = (p, w, _) => {
    a.has(p) && setTimeout(() => {
      a.get(p).forEach((b) => {
        if (n) {
          const I = Array.isArray(w) ? w.map((V) => n.serialize(V)) : n.serialize(w), U = _ ? _ instanceof PointerEvent ? _ : n.serialize(_) : void 0;
          b(I, U);
        } else
          b(w, _);
      });
    }, 1);
  }, y = () => {
    const { selected: p } = r, w = (p || []).map(({ id: _ }) => i.getAnnotation(_));
    w.forEach((_) => {
      const b = c.find((I) => I.id === _.id);
      (!b || !pe(b, _)) && m("updateAnnotation", _, b);
    }), c = c.map((_) => w.find(({ id: I }) => I === _.id) || _);
  };
  r.subscribe(({ selected: p }) => {
    if (!(c.length === 0 && p.length === 0)) {
      if (c.length === 0 && p.length > 0)
        c = p.map(({ id: w }) => i.getAnnotation(w));
      else if (c.length > 0 && p.length === 0)
        c.forEach((w) => {
          const _ = i.getAnnotation(w.id);
          _ && !pe(_, w) && m("updateAnnotation", _, w);
        }), c = [];
      else {
        const w = new Set(c.map((b) => b.id)), _ = new Set(p.map(({ id: b }) => b));
        c.filter((b) => !_.has(b.id)).forEach((b) => {
          const I = i.getAnnotation(b.id);
          I && !pe(I, b) && m("updateAnnotation", I, b);
        }), c = [
          // Remove annotations that were deselected
          ...c.filter((b) => _.has(b.id)),
          // Add editable annotations that were selected
          ...p.filter(({ id: b }) => !w.has(b)).map(({ id: b }) => i.getAnnotation(b))
        ];
      }
      m("selectionChanged", c);
    }
  }), s.subscribe((p) => {
    !u && p ? m("mouseEnterAnnotation", i.getAnnotation(p)) : u && !p ? m("mouseLeaveAnnotation", i.getAnnotation(u)) : u && p && (m("mouseLeaveAnnotation", i.getAnnotation(u)), m("mouseEnterAnnotation", i.getAnnotation(p))), u = p;
  }), l == null || l.subscribe((p) => m("viewportIntersect", p.map((w) => i.getAnnotation(w)))), i.observe((p) => {
    o && (f && clearTimeout(f), f = setTimeout(y, 1e3));
    const { created: w, deleted: _ } = p.changes;
    (w || []).forEach((b) => m("createAnnotation", b)), (_ || []).forEach((b) => m("deleteAnnotation", b)), (p.changes.updated || []).filter((b) => [
      ...b.bodiesCreated || [],
      ...b.bodiesDeleted || [],
      ...b.bodiesUpdated || []
    ].length > 0).forEach(({ oldValue: b, newValue: I }) => {
      const U = c.find((V) => V.id === b.id) || b;
      c = c.map((V) => V.id === b.id ? I : V), m("updateAnnotation", I, U);
    });
  }, { origin: z.LOCAL }), i.observe((p) => {
    if (c) {
      const w = new Set(c.map((b) => b.id)), _ = (p.changes.updated || []).filter(({ newValue: b }) => w.has(b.id)).map(({ newValue: b }) => b);
      _.length > 0 && (c = c.map((b) => _.find((U) => U.id === b.id) || b));
    }
  }, { origin: z.REMOTE });
  const T = (p) => (w) => {
    const { updated: _ } = w;
    p ? (_ || []).forEach((b) => m("updateAnnotation", b.oldValue, b.newValue)) : (_ || []).forEach((b) => m("updateAnnotation", b.newValue, b.oldValue));
  };
  return t.on("undo", T(!0)), t.on("redo", T(!1)), { on: g, off: h, emit: m };
}, go = (e) => (t) => t.reduce((n, o) => {
  const { parsed: i, error: r } = e.parse(o);
  return r ? {
    parsed: n.parsed,
    failed: [...n.failed, o]
  } : i ? {
    parsed: [...n.parsed, i],
    failed: n.failed
  } : {
    ...n
  };
}, { parsed: [], failed: [] }), mo = (e, t, n) => {
  const { store: o, selection: i } = e, r = (p) => {
    if (n) {
      const { parsed: w, error: _ } = n.parse(p);
      w ? o.addAnnotation(w, z.REMOTE) : console.error(_);
    } else
      o.addAnnotation(rt(p), z.REMOTE);
  }, s = () => i.clear(), l = () => o.clear(), a = (p) => {
    const w = o.getAnnotation(p);
    return n && w ? n.serialize(w) : w;
  }, c = () => n ? o.all().map(n.serialize) : o.all(), u = () => {
    var p;
    const w = (((p = i.selected) == null ? void 0 : p.map((_) => _.id)) || []).map((_) => o.getAnnotation(_)).filter(Boolean);
    return n ? w.map(n.serialize) : w;
  }, f = (p, w = !0) => fetch(p).then((_) => _.json()).then((_) => (h(_, w), _)), g = (p) => {
    if (typeof p == "string") {
      const w = o.getAnnotation(p);
      if (o.deleteAnnotation(p), w)
        return n ? n.serialize(w) : w;
    } else {
      const w = n ? n.parse(p).parsed : p;
      if (w)
        return o.deleteAnnotation(w), p;
    }
  }, h = (p, w = !0) => {
    if (n) {
      const _ = n.parseAll || go(n), { parsed: b, failed: I } = _(p);
      I.length > 0 && console.warn(`Discarded ${I.length} invalid annotations`, I), o.bulkAddAnnotation(b, w, z.REMOTE);
    } else
      o.bulkAddAnnotation(p.map(rt), w, z.REMOTE);
  }, m = (p, w) => {
    p ? i.setSelected(p, w) : i.clear();
  }, y = (p) => {
    i.clear(), i.setUserSelectAction(p);
  }, T = (p) => {
    if (n) {
      const w = n.parse(p).parsed, _ = n.serialize(o.getAnnotation(w.id));
      return o.updateAnnotation(w), _;
    } else {
      const w = o.getAnnotation(p.id);
      return o.updateAnnotation(rt(p)), w;
    }
  };
  return {
    addAnnotation: r,
    cancelSelected: s,
    canRedo: t.canRedo,
    canUndo: t.canUndo,
    clearAnnotations: l,
    getAnnotationById: a,
    getAnnotations: c,
    getSelected: u,
    loadAnnotations: f,
    redo: t.redo,
    removeAnnotation: g,
    setAnnotations: h,
    setSelected: m,
    setUserSelectAction: y,
    undo: t.undo,
    updateAnnotation: T
  };
}, po = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
let yo = (e) => crypto.getRandomValues(new Uint8Array(e)), _o = (e, t, n) => {
  let o = (2 << Math.log(e.length - 1) / Math.LN2) - 1, i = -~(1.6 * o * t / e.length);
  return (r = t) => {
    let s = "";
    for (; ; ) {
      let l = n(i), a = i;
      for (; a--; )
        if (s += e[l[a] & o] || "", s.length === r) return s;
    }
  };
}, wo = (e, t = 21) => _o(e, t, yo), bo = (e = 21) => {
  let t = "", n = crypto.getRandomValues(new Uint8Array(e));
  for (; e--; )
    t += po[n[e] & 63];
  return t;
};
const Eo = () => ({ isGuest: !0, id: wo("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_", 20)() }), Ao = (e) => {
  const t = JSON.stringify(e);
  let n = 0;
  for (let o = 0, i = t.length; o < i; o++) {
    let r = t.charCodeAt(o);
    n = (n << 5) - n + r, n |= 0;
  }
  return `${n}`;
}, ln = (e) => e ? typeof e == "object" ? { ...e } : e : void 0, So = (e, t) => (Array.isArray(e) ? e : [e]).map((n) => {
  const { id: o, type: i, purpose: r, value: s, created: l, modified: a, creator: c, ...u } = n;
  return {
    id: o || `temp-${Ao(n)}`,
    annotation: t,
    type: i,
    purpose: r,
    value: s,
    creator: ln(c),
    created: l ? new Date(l) : void 0,
    updated: a ? new Date(a) : void 0,
    ...u
  };
}), vo = (e) => e.map((t) => {
  var n;
  const { annotation: o, created: i, updated: r, ...s } = t, l = {
    ...s,
    created: i == null ? void 0 : i.toISOString(),
    modified: r == null ? void 0 : r.toISOString()
  };
  return (n = l.id) != null && n.startsWith("temp-") && delete l.id, l;
});
bo();
const Hi = (e, t = { strict: !0, invertY: !1 }) => ({ parse: (i) => To(i, t), serialize: (i) => Mo(i, e, t) }), To = (e, t = { strict: !0, invertY: !1 }) => {
  const n = e.id || on(), {
    creator: o,
    created: i,
    modified: r,
    body: s,
    ...l
  } = e, a = So(s || [], n), c = Array.isArray(e.target) ? e.target[0] : e.target, u = Array.isArray(c.selector) ? c.selector[0] : c.selector, f = (u == null ? void 0 : u.type) === "FragmentSelector" ? Dn(u, t.invertY) : (u == null ? void 0 : u.type) === "SvgSelector" ? Un(u) : void 0;
  return f || !t.strict ? {
    parsed: {
      ...l,
      id: n,
      bodies: a,
      target: {
        created: i ? new Date(i) : void 0,
        creator: ln(o),
        updated: r ? new Date(r) : void 0,
        ...Array.isArray(l.target) ? l.target[0] : l.target,
        annotation: n,
        selector: f || u
      }
    }
  } : {
    error: Error(`Invalid selector: ${JSON.stringify(u)}`)
  };
}, Mo = (e, t, n = { strict: !0, invertY: !1 }) => {
  const {
    selector: o,
    creator: i,
    created: r,
    updated: s,
    updatedBy: l,
    // Excluded from serialization
    ...a
  } = e.target;
  let c;
  try {
    c = o.type == W.RECTANGLE ? Yn(o.geometry) : Vn(o);
  } catch (f) {
    if (n.strict)
      throw f;
    c = o;
  }
  const u = {
    ...e,
    "@context": "http://www.w3.org/ns/anno.jsonld",
    id: e.id,
    type: "Annotation",
    body: vo(e.bodies),
    created: r == null ? void 0 : r.toISOString(),
    creator: i,
    modified: s == null ? void 0 : s.toISOString(),
    target: {
      ...a,
      source: t,
      selector: c
    }
  };
  return delete u.bodies, "annotation" in u.target && delete u.target.annotation, u;
};
function It(e, t, n) {
  const o = e.slice();
  return o[10] = t[n], o[12] = n, o;
}
function Ot(e) {
  let t, n;
  return t = new Be({
    props: {
      x: (
        /*point*/
        e[10][0]
      ),
      y: (
        /*point*/
        e[10][1]
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), t.$on("pointerdown", function() {
    q(
      /*grab*/
      e[9](`HANDLE-${/*idx*/
      e[12]}`)
    ) && e[9](`HANDLE-${/*idx*/
    e[12]}`).apply(this, arguments);
  }), {
    c() {
      te(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      e = o;
      const r = {};
      i & /*geom*/
      16 && (r.x = /*point*/
      e[10][0]), i & /*geom*/
      16 && (r.y = /*point*/
      e[10][1]), i & /*viewportScale*/
      8 && (r.scale = /*viewportScale*/
      e[3]), t.$set(r);
    },
    i(o) {
      n || (P(t.$$.fragment, o), n = !0);
    },
    o(o) {
      R(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Lo(e) {
  let t, n, o, i, r, s, l, a, c, u, f, g = Te(
    /*geom*/
    e[4].points
  ), h = [];
  for (let y = 0; y < g.length; y += 1)
    h[y] = Ot(It(e, g, y));
  const m = (y) => R(h[y], 1, 1, () => {
    h[y] = null;
  });
  return {
    c() {
      t = C("polygon"), i = ie(), r = C("polygon"), l = ie();
      for (let y = 0; y < h.length; y += 1)
        h[y].c();
      a = le(), d(t, "class", "a9s-outer"), d(t, "style", n = /*computedStyle*/
      e[1] ? "display:none;" : void 0), d(t, "points", o = /*geom*/
      e[4].points.map(Bt).join(" ")), d(r, "class", "a9s-inner a9s-shape-handle"), d(
        r,
        "style",
        /*computedStyle*/
        e[1]
      ), d(r, "points", s = /*geom*/
      e[4].points.map(Pt).join(" "));
    },
    m(y, T) {
      O(y, t, T), O(y, i, T), O(y, r, T), O(y, l, T);
      for (let p = 0; p < h.length; p += 1)
        h[p] && h[p].m(y, T);
      O(y, a, T), c = !0, u || (f = [
        F(t, "pointerdown", function() {
          q(
            /*grab*/
            e[9]("SHAPE")
          ) && e[9]("SHAPE").apply(this, arguments);
        }),
        F(r, "pointerdown", function() {
          q(
            /*grab*/
            e[9]("SHAPE")
          ) && e[9]("SHAPE").apply(this, arguments);
        })
      ], u = !0);
    },
    p(y, T) {
      if (e = y, (!c || T & /*computedStyle*/
      2 && n !== (n = /*computedStyle*/
      e[1] ? "display:none;" : void 0)) && d(t, "style", n), (!c || T & /*geom*/
      16 && o !== (o = /*geom*/
      e[4].points.map(Bt).join(" "))) && d(t, "points", o), (!c || T & /*computedStyle*/
      2) && d(
        r,
        "style",
        /*computedStyle*/
        e[1]
      ), (!c || T & /*geom*/
      16 && s !== (s = /*geom*/
      e[4].points.map(Pt).join(" "))) && d(r, "points", s), T & /*geom, viewportScale, grab*/
      536) {
        g = Te(
          /*geom*/
          e[4].points
        );
        let p;
        for (p = 0; p < g.length; p += 1) {
          const w = It(e, g, p);
          h[p] ? (h[p].p(w, T), P(h[p], 1)) : (h[p] = Ot(w), h[p].c(), P(h[p], 1), h[p].m(a.parentNode, a));
        }
        for (re(), p = g.length; p < h.length; p += 1)
          m(p);
        se();
      }
    },
    i(y) {
      if (!c) {
        for (let T = 0; T < g.length; T += 1)
          P(h[T]);
        c = !0;
      }
    },
    o(y) {
      h = h.filter(Boolean);
      for (let T = 0; T < h.length; T += 1)
        R(h[T]);
      c = !1;
    },
    d(y) {
      y && (k(t), k(i), k(r), k(l), k(a)), pt(h, y), u = !1, de(f);
    }
  };
}
function ko(e) {
  let t, n;
  return t = new cn({
    props: {
      shape: (
        /*shape*/
        e[0]
      ),
      transform: (
        /*transform*/
        e[2]
      ),
      editor: (
        /*editor*/
        e[5]
      ),
      $$slots: {
        default: [
          Lo,
          ({ grab: o }) => ({ 9: o }),
          ({ grab: o }) => o ? 512 : 0
        ]
      },
      $$scope: { ctx: e }
    }
  }), t.$on(
    "change",
    /*change_handler*/
    e[6]
  ), t.$on(
    "grab",
    /*grab_handler*/
    e[7]
  ), t.$on(
    "release",
    /*release_handler*/
    e[8]
  ), {
    c() {
      te(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, [i]) {
      const r = {};
      i & /*shape*/
      1 && (r.shape = /*shape*/
      o[0]), i & /*transform*/
      4 && (r.transform = /*transform*/
      o[2]), i & /*$$scope, geom, viewportScale, grab, computedStyle*/
      8730 && (r.$$scope = { dirty: i, ctx: o }), t.$set(r);
    },
    i(o) {
      n || (P(t.$$.fragment, o), n = !0);
    },
    o(o) {
      R(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
const Bt = (e) => e.join(","), Pt = (e) => e.join(",");
function Io(e, t, n) {
  let o, { shape: i } = t, { computedStyle: r } = t, { transform: s } = t, { viewportScale: l = 1 } = t;
  const a = (g, h, m) => {
    let y;
    const T = g.geometry;
    h === "SHAPE" ? y = T.points.map(([w, _]) => [w + m[0], _ + m[1]]) : y = T.points.map(([w, _], b) => h === `HANDLE-${b}` ? [w + m[0], _ + m[1]] : [w, _]);
    const p = Qe(y);
    return { ...g, geometry: { points: y, bounds: p } };
  };
  function c(g) {
    he.call(this, e, g);
  }
  function u(g) {
    he.call(this, e, g);
  }
  function f(g) {
    he.call(this, e, g);
  }
  return e.$$set = (g) => {
    "shape" in g && n(0, i = g.shape), "computedStyle" in g && n(1, r = g.computedStyle), "transform" in g && n(2, s = g.transform), "viewportScale" in g && n(3, l = g.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*shape*/
    1 && n(4, o = i.geometry);
  }, [
    i,
    r,
    s,
    l,
    o,
    a,
    c,
    u,
    f
  ];
}
class Oo extends oe {
  constructor(t) {
    super(), ne(this, t, Io, ko, Z, {
      shape: 0,
      computedStyle: 1,
      transform: 2,
      viewportScale: 3
    });
  }
}
const lt = (e, t) => {
  const n = Math.abs(t[0] - e[0]), o = Math.abs(t[1] - e[1]);
  return Math.sqrt(Math.pow(n, 2) + Math.pow(o, 2));
}, be = [];
function Bo(e, t = H) {
  let n;
  const o = /* @__PURE__ */ new Set();
  function i(l) {
    if (Z(e, l) && (e = l, n)) {
      const a = !be.length;
      for (const c of o)
        c[1](), be.push(c, e);
      if (a) {
        for (let c = 0; c < be.length; c += 2)
          be[c][0](be[c + 1]);
        be.length = 0;
      }
    }
  }
  function r(l) {
    i(l(e));
  }
  function s(l, a = H) {
    const c = [l, a];
    return o.add(c), o.size === 1 && (n = t(i, r) || H), l(e), () => {
      o.delete(c), o.size === 0 && n && (n(), n = null);
    };
  }
  return { set: i, update: r, subscribe: s };
}
const Po = (e, t) => {
  const { naturalWidth: n, naturalHeight: o } = e;
  if (!n && !o) {
    const { width: i, height: r } = e;
    t.setAttribute("viewBox", `0 0 ${i} ${r}`), e.addEventListener("load", (s) => {
      const l = s.target;
      t.setAttribute("viewBox", `0 0 ${l.naturalWidth} ${l.naturalHeight}`);
    });
  } else
    t.setAttribute("viewBox", `0 0 ${n} ${o}`);
}, Do = (e, t) => {
  Po(e, t);
  const { subscribe: n, set: o } = Bo(1);
  let i;
  return window.ResizeObserver && (i = new ResizeObserver(() => {
    const s = t.getBoundingClientRect(), { width: l, height: a } = t.viewBox.baseVal, c = Math.max(
      s.width / l,
      s.height / a
    );
    o(c);
  }), i.observe(t.parentElement)), { destroy: () => {
    i && i.disconnect();
  }, subscribe: n };
}, Yo = typeof window > "u" || typeof navigator > "u" ? !1 : "ontouchstart" in window || navigator.maxTouchPoints > 0 || // @ts-ignore
navigator.msMaxTouchPoints > 0;
function Xo(e) {
  let t, n, o, i, r, s;
  return {
    c() {
      t = C("rect"), d(t, "class", n = Ke(`a9s-handle ${/*$$props*/
      e[8].class || ""}`.trim()) + " svelte-1sgkh33"), d(t, "x", o = /*x*/
      e[0] - /*handleSize*/
      e[5] / 2), d(t, "y", i = /*y*/
      e[1] - /*handleSize*/
      e[5] / 2), d(
        t,
        "width",
        /*handleSize*/
        e[5]
      ), d(
        t,
        "height",
        /*handleSize*/
        e[5]
      );
    },
    m(l, a) {
      O(l, t, a), r || (s = F(
        t,
        "pointerdown",
        /*pointerdown_handler_2*/
        e[11]
      ), r = !0);
    },
    p(l, a) {
      a & /*$$props*/
      256 && n !== (n = Ke(`a9s-handle ${/*$$props*/
      l[8].class || ""}`.trim()) + " svelte-1sgkh33") && d(t, "class", n), a & /*x, handleSize*/
      33 && o !== (o = /*x*/
      l[0] - /*handleSize*/
      l[5] / 2) && d(t, "x", o), a & /*y, handleSize*/
      34 && i !== (i = /*y*/
      l[1] - /*handleSize*/
      l[5] / 2) && d(t, "y", i), a & /*handleSize*/
      32 && d(
        t,
        "width",
        /*handleSize*/
        l[5]
      ), a & /*handleSize*/
      32 && d(
        t,
        "height",
        /*handleSize*/
        l[5]
      );
    },
    d(l) {
      l && k(t), r = !1, s();
    }
  };
}
function Ro(e) {
  let t, n, o, i, r, s, l, a, c;
  return {
    c() {
      t = C("g"), n = C("circle"), i = C("rect"), d(
        n,
        "cx",
        /*x*/
        e[0]
      ), d(
        n,
        "cy",
        /*y*/
        e[1]
      ), d(n, "r", o = /*radius*/
      e[3] / /*scale*/
      e[2]), d(n, "class", "a9s-touch-halo svelte-1sgkh33"), me(
        n,
        "touched",
        /*touched*/
        e[4]
      ), d(i, "class", r = Ke(`a9s-handle ${/*$$props*/
      e[8].class || ""}`.trim()) + " svelte-1sgkh33"), d(i, "x", s = /*x*/
      e[0] - /*handleSize*/
      e[5] / 2), d(i, "y", l = /*y*/
      e[1] - /*handleSize*/
      e[5] / 2), d(
        i,
        "width",
        /*handleSize*/
        e[5]
      ), d(
        i,
        "height",
        /*handleSize*/
        e[5]
      ), d(t, "class", "a9s-touch-handle");
    },
    m(u, f) {
      O(u, t, f), ue(t, n), ue(t, i), a || (c = [
        F(
          n,
          "pointerdown",
          /*pointerdown_handler*/
          e[10]
        ),
        F(
          n,
          "pointerdown",
          /*onPointerDown*/
          e[6]
        ),
        F(
          n,
          "pointerup",
          /*onPointerUp*/
          e[7]
        ),
        F(
          i,
          "pointerdown",
          /*pointerdown_handler_1*/
          e[9]
        ),
        F(
          i,
          "pointerdown",
          /*onPointerDown*/
          e[6]
        ),
        F(
          i,
          "pointerup",
          /*onPointerUp*/
          e[7]
        )
      ], a = !0);
    },
    p(u, f) {
      f & /*x*/
      1 && d(
        n,
        "cx",
        /*x*/
        u[0]
      ), f & /*y*/
      2 && d(
        n,
        "cy",
        /*y*/
        u[1]
      ), f & /*radius, scale*/
      12 && o !== (o = /*radius*/
      u[3] / /*scale*/
      u[2]) && d(n, "r", o), f & /*touched*/
      16 && me(
        n,
        "touched",
        /*touched*/
        u[4]
      ), f & /*$$props*/
      256 && r !== (r = Ke(`a9s-handle ${/*$$props*/
      u[8].class || ""}`.trim()) + " svelte-1sgkh33") && d(i, "class", r), f & /*x, handleSize*/
      33 && s !== (s = /*x*/
      u[0] - /*handleSize*/
      u[5] / 2) && d(i, "x", s), f & /*y, handleSize*/
      34 && l !== (l = /*y*/
      u[1] - /*handleSize*/
      u[5] / 2) && d(i, "y", l), f & /*handleSize*/
      32 && d(
        i,
        "width",
        /*handleSize*/
        u[5]
      ), f & /*handleSize*/
      32 && d(
        i,
        "height",
        /*handleSize*/
        u[5]
      );
    },
    d(u) {
      u && k(t), a = !1, de(c);
    }
  };
}
function Co(e) {
  let t;
  function n(r, s) {
    return Yo ? Ro : Xo;
  }
  let i = n()(e);
  return {
    c() {
      i.c(), t = le();
    },
    m(r, s) {
      i.m(r, s), O(r, t, s);
    },
    p(r, [s]) {
      i.p(r, s);
    },
    i: H,
    o: H,
    d(r) {
      r && k(t), i.d(r);
    }
  };
}
function No(e, t, n) {
  let o, { x: i } = t, { y: r } = t, { scale: s } = t, { radius: l = 30 } = t, a = !1;
  const c = (m) => {
    m.pointerType === "touch" && n(4, a = !0);
  }, u = () => n(4, a = !1);
  function f(m) {
    he.call(this, e, m);
  }
  function g(m) {
    he.call(this, e, m);
  }
  function h(m) {
    he.call(this, e, m);
  }
  return e.$$set = (m) => {
    n(8, t = dt(dt({}, t), At(m))), "x" in m && n(0, i = m.x), "y" in m && n(1, r = m.y), "scale" in m && n(2, s = m.scale), "radius" in m && n(3, l = m.radius);
  }, e.$$.update = () => {
    e.$$.dirty & /*scale*/
    4 && n(5, o = 10 / s);
  }, t = At(t), [
    i,
    r,
    s,
    l,
    a,
    o,
    c,
    u,
    t,
    f,
    g,
    h
  ];
}
class Be extends oe {
  constructor(t) {
    super(), ne(this, t, No, Co, Z, { x: 0, y: 1, scale: 2, radius: 3 });
  }
}
function Uo(e) {
  let t, n, o, i, r, s, l, a, c, u, f, g, h, m, y, T, p, w, _, b, I, U, V, G, D, E, A, S, v, N, X, K, ge, ae, Le, ce, ke, fe, Ie, L, Y, j, ee;
  return ae = new Be({
    props: {
      class: "a9s-corner-handle-topleft",
      x: (
        /*geom*/
        e[4].x
      ),
      y: (
        /*geom*/
        e[4].y
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), ae.$on("pointerdown", function() {
    q(
      /*grab*/
      e[9]("TOP_LEFT")
    ) && e[9]("TOP_LEFT").apply(this, arguments);
  }), ce = new Be({
    props: {
      class: "a9s-corner-handle-topright",
      x: (
        /*geom*/
        e[4].x + /*geom*/
        e[4].w
      ),
      y: (
        /*geom*/
        e[4].y
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), ce.$on("pointerdown", function() {
    q(
      /*grab*/
      e[9]("TOP_RIGHT")
    ) && e[9]("TOP_RIGHT").apply(this, arguments);
  }), fe = new Be({
    props: {
      class: "a9s-corner-handle-bottomright",
      x: (
        /*geom*/
        e[4].x + /*geom*/
        e[4].w
      ),
      y: (
        /*geom*/
        e[4].y + /*geom*/
        e[4].h
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), fe.$on("pointerdown", function() {
    q(
      /*grab*/
      e[9]("BOTTOM_RIGHT")
    ) && e[9]("BOTTOM_RIGHT").apply(this, arguments);
  }), L = new Be({
    props: {
      class: "a9s-corner-handle-bottomleft",
      x: (
        /*geom*/
        e[4].x
      ),
      y: (
        /*geom*/
        e[4].y + /*geom*/
        e[4].h
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), L.$on("pointerdown", function() {
    q(
      /*grab*/
      e[9]("BOTTOM_LEFT")
    ) && e[9]("BOTTOM_LEFT").apply(this, arguments);
  }), {
    c() {
      t = C("rect"), l = ie(), a = C("rect"), h = ie(), m = C("rect"), w = ie(), _ = C("rect"), V = ie(), G = C("rect"), S = ie(), v = C("rect"), ge = ie(), te(ae.$$.fragment), Le = ie(), te(ce.$$.fragment), ke = ie(), te(fe.$$.fragment), Ie = ie(), te(L.$$.fragment), d(t, "class", "a9s-outer"), d(t, "style", n = /*computedStyle*/
      e[1] ? "display:none;" : void 0), d(t, "x", o = /*geom*/
      e[4].x), d(t, "y", i = /*geom*/
      e[4].y), d(t, "width", r = /*geom*/
      e[4].w), d(t, "height", s = /*geom*/
      e[4].h), d(a, "class", "a9s-inner a9s-shape-handle"), d(
        a,
        "style",
        /*computedStyle*/
        e[1]
      ), d(a, "x", c = /*geom*/
      e[4].x), d(a, "y", u = /*geom*/
      e[4].y), d(a, "width", f = /*geom*/
      e[4].w), d(a, "height", g = /*geom*/
      e[4].h), d(m, "class", "a9s-edge-handle a9s-edge-handle-top"), d(m, "x", y = /*geom*/
      e[4].x), d(m, "y", T = /*geom*/
      e[4].y), d(m, "height", 1), d(m, "width", p = /*geom*/
      e[4].w), d(_, "class", "a9s-edge-handle a9s-edge-handle-right"), d(_, "x", b = /*geom*/
      e[4].x + /*geom*/
      e[4].w), d(_, "y", I = /*geom*/
      e[4].y), d(_, "height", U = /*geom*/
      e[4].h), d(_, "width", 1), d(G, "class", "a9s-edge-handle a9s-edge-handle-bottom"), d(G, "x", D = /*geom*/
      e[4].x), d(G, "y", E = /*geom*/
      e[4].y + /*geom*/
      e[4].h), d(G, "height", 1), d(G, "width", A = /*geom*/
      e[4].w), d(v, "class", "a9s-edge-handle a9s-edge-handle-left"), d(v, "x", N = /*geom*/
      e[4].x), d(v, "y", X = /*geom*/
      e[4].y), d(v, "height", K = /*geom*/
      e[4].h), d(v, "width", 1);
    },
    m(B, M) {
      O(B, t, M), O(B, l, M), O(B, a, M), O(B, h, M), O(B, m, M), O(B, w, M), O(B, _, M), O(B, V, M), O(B, G, M), O(B, S, M), O(B, v, M), O(B, ge, M), x(ae, B, M), O(B, Le, M), x(ce, B, M), O(B, ke, M), x(fe, B, M), O(B, Ie, M), x(L, B, M), Y = !0, j || (ee = [
        F(t, "pointerdown", function() {
          q(
            /*grab*/
            e[9]("SHAPE")
          ) && e[9]("SHAPE").apply(this, arguments);
        }),
        F(a, "pointerdown", function() {
          q(
            /*grab*/
            e[9]("SHAPE")
          ) && e[9]("SHAPE").apply(this, arguments);
        }),
        F(m, "pointerdown", function() {
          q(
            /*grab*/
            e[9]("TOP")
          ) && e[9]("TOP").apply(this, arguments);
        }),
        F(_, "pointerdown", function() {
          q(
            /*grab*/
            e[9]("RIGHT")
          ) && e[9]("RIGHT").apply(this, arguments);
        }),
        F(G, "pointerdown", function() {
          q(
            /*grab*/
            e[9]("BOTTOM")
          ) && e[9]("BOTTOM").apply(this, arguments);
        }),
        F(v, "pointerdown", function() {
          q(
            /*grab*/
            e[9]("LEFT")
          ) && e[9]("LEFT").apply(this, arguments);
        })
      ], j = !0);
    },
    p(B, M) {
      e = B, (!Y || M & /*computedStyle*/
      2 && n !== (n = /*computedStyle*/
      e[1] ? "display:none;" : void 0)) && d(t, "style", n), (!Y || M & /*geom*/
      16 && o !== (o = /*geom*/
      e[4].x)) && d(t, "x", o), (!Y || M & /*geom*/
      16 && i !== (i = /*geom*/
      e[4].y)) && d(t, "y", i), (!Y || M & /*geom*/
      16 && r !== (r = /*geom*/
      e[4].w)) && d(t, "width", r), (!Y || M & /*geom*/
      16 && s !== (s = /*geom*/
      e[4].h)) && d(t, "height", s), (!Y || M & /*computedStyle*/
      2) && d(
        a,
        "style",
        /*computedStyle*/
        e[1]
      ), (!Y || M & /*geom*/
      16 && c !== (c = /*geom*/
      e[4].x)) && d(a, "x", c), (!Y || M & /*geom*/
      16 && u !== (u = /*geom*/
      e[4].y)) && d(a, "y", u), (!Y || M & /*geom*/
      16 && f !== (f = /*geom*/
      e[4].w)) && d(a, "width", f), (!Y || M & /*geom*/
      16 && g !== (g = /*geom*/
      e[4].h)) && d(a, "height", g), (!Y || M & /*geom*/
      16 && y !== (y = /*geom*/
      e[4].x)) && d(m, "x", y), (!Y || M & /*geom*/
      16 && T !== (T = /*geom*/
      e[4].y)) && d(m, "y", T), (!Y || M & /*geom*/
      16 && p !== (p = /*geom*/
      e[4].w)) && d(m, "width", p), (!Y || M & /*geom*/
      16 && b !== (b = /*geom*/
      e[4].x + /*geom*/
      e[4].w)) && d(_, "x", b), (!Y || M & /*geom*/
      16 && I !== (I = /*geom*/
      e[4].y)) && d(_, "y", I), (!Y || M & /*geom*/
      16 && U !== (U = /*geom*/
      e[4].h)) && d(_, "height", U), (!Y || M & /*geom*/
      16 && D !== (D = /*geom*/
      e[4].x)) && d(G, "x", D), (!Y || M & /*geom*/
      16 && E !== (E = /*geom*/
      e[4].y + /*geom*/
      e[4].h)) && d(G, "y", E), (!Y || M & /*geom*/
      16 && A !== (A = /*geom*/
      e[4].w)) && d(G, "width", A), (!Y || M & /*geom*/
      16 && N !== (N = /*geom*/
      e[4].x)) && d(v, "x", N), (!Y || M & /*geom*/
      16 && X !== (X = /*geom*/
      e[4].y)) && d(v, "y", X), (!Y || M & /*geom*/
      16 && K !== (K = /*geom*/
      e[4].h)) && d(v, "height", K);
      const Ce = {};
      M & /*geom*/
      16 && (Ce.x = /*geom*/
      e[4].x), M & /*geom*/
      16 && (Ce.y = /*geom*/
      e[4].y), M & /*viewportScale*/
      8 && (Ce.scale = /*viewportScale*/
      e[3]), ae.$set(Ce);
      const Ne = {};
      M & /*geom*/
      16 && (Ne.x = /*geom*/
      e[4].x + /*geom*/
      e[4].w), M & /*geom*/
      16 && (Ne.y = /*geom*/
      e[4].y), M & /*viewportScale*/
      8 && (Ne.scale = /*viewportScale*/
      e[3]), ce.$set(Ne);
      const Ue = {};
      M & /*geom*/
      16 && (Ue.x = /*geom*/
      e[4].x + /*geom*/
      e[4].w), M & /*geom*/
      16 && (Ue.y = /*geom*/
      e[4].y + /*geom*/
      e[4].h), M & /*viewportScale*/
      8 && (Ue.scale = /*viewportScale*/
      e[3]), fe.$set(Ue);
      const Ve = {};
      M & /*geom*/
      16 && (Ve.x = /*geom*/
      e[4].x), M & /*geom*/
      16 && (Ve.y = /*geom*/
      e[4].y + /*geom*/
      e[4].h), M & /*viewportScale*/
      8 && (Ve.scale = /*viewportScale*/
      e[3]), L.$set(Ve);
    },
    i(B) {
      Y || (P(ae.$$.fragment, B), P(ce.$$.fragment, B), P(fe.$$.fragment, B), P(L.$$.fragment, B), Y = !0);
    },
    o(B) {
      R(ae.$$.fragment, B), R(ce.$$.fragment, B), R(fe.$$.fragment, B), R(L.$$.fragment, B), Y = !1;
    },
    d(B) {
      B && (k(t), k(l), k(a), k(h), k(m), k(w), k(_), k(V), k(G), k(S), k(v), k(ge), k(Le), k(ke), k(Ie)), $(ae, B), $(ce, B), $(fe, B), $(L, B), j = !1, de(ee);
    }
  };
}
function Vo(e) {
  let t, n;
  return t = new cn({
    props: {
      shape: (
        /*shape*/
        e[0]
      ),
      transform: (
        /*transform*/
        e[2]
      ),
      editor: (
        /*editor*/
        e[5]
      ),
      $$slots: {
        default: [
          Uo,
          ({ grab: o }) => ({ 9: o }),
          ({ grab: o }) => o ? 512 : 0
        ]
      },
      $$scope: { ctx: e }
    }
  }), t.$on(
    "grab",
    /*grab_handler*/
    e[6]
  ), t.$on(
    "change",
    /*change_handler*/
    e[7]
  ), t.$on(
    "release",
    /*release_handler*/
    e[8]
  ), {
    c() {
      te(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, [i]) {
      const r = {};
      i & /*shape*/
      1 && (r.shape = /*shape*/
      o[0]), i & /*transform*/
      4 && (r.transform = /*transform*/
      o[2]), i & /*$$scope, geom, viewportScale, grab, computedStyle*/
      1562 && (r.$$scope = { dirty: i, ctx: o }), t.$set(r);
    },
    i(o) {
      n || (P(t.$$.fragment, o), n = !0);
    },
    o(o) {
      R(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Go(e, t, n) {
  let o, { shape: i } = t, { computedStyle: r } = t, { transform: s } = t, { viewportScale: l = 1 } = t;
  const a = (g, h, m) => {
    const y = g.geometry.bounds;
    let [T, p] = [y.minX, y.minY], [w, _] = [y.maxX, y.maxY];
    const [b, I] = m;
    if (h === "SHAPE")
      T += b, w += b, p += I, _ += I;
    else {
      switch (h) {
        case "TOP":
        case "TOP_LEFT":
        case "TOP_RIGHT": {
          p += I;
          break;
        }
        case "BOTTOM":
        case "BOTTOM_LEFT":
        case "BOTTOM_RIGHT": {
          _ += I;
          break;
        }
      }
      switch (h) {
        case "LEFT":
        case "TOP_LEFT":
        case "BOTTOM_LEFT": {
          T += b;
          break;
        }
        case "RIGHT":
        case "TOP_RIGHT":
        case "BOTTOM_RIGHT": {
          w += b;
          break;
        }
      }
    }
    const U = Math.min(T, w), V = Math.min(p, _), G = Math.abs(w - T), D = Math.abs(_ - p);
    return {
      ...g,
      geometry: {
        x: U,
        y: V,
        w: G,
        h: D,
        bounds: {
          minX: U,
          minY: V,
          maxX: U + G,
          maxY: V + D
        }
      }
    };
  };
  function c(g) {
    he.call(this, e, g);
  }
  function u(g) {
    he.call(this, e, g);
  }
  function f(g) {
    he.call(this, e, g);
  }
  return e.$$set = (g) => {
    "shape" in g && n(0, i = g.shape), "computedStyle" in g && n(1, r = g.computedStyle), "transform" in g && n(2, s = g.transform), "viewportScale" in g && n(3, l = g.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*shape*/
    1 && n(4, o = i.geometry);
  }, [
    i,
    r,
    s,
    l,
    o,
    a,
    c,
    u,
    f
  ];
}
class jo extends oe {
  constructor(t) {
    super(), ne(this, t, Go, Vo, Z, {
      shape: 0,
      computedStyle: 1,
      transform: 2,
      viewportScale: 3
    });
  }
}
const an = /* @__PURE__ */ new Map([
  [W.RECTANGLE, jo],
  [W.POLYGON, Oo]
]), zo = (e) => an.get(e.type), Ho = (e, t) => an.set(e, t), Fo = (e) => ({}), Dt = (e) => ({ grab: (
  /*onGrab*/
  e[0]
) });
function Wo(e) {
  let t, n, o, i;
  const r = (
    /*#slots*/
    e[7].default
  ), s = yn(
    r,
    e,
    /*$$scope*/
    e[6],
    Dt
  );
  return {
    c() {
      t = C("g"), s && s.c(), d(t, "class", "a9s-annotation selected");
    },
    m(l, a) {
      O(l, t, a), s && s.m(t, null), n = !0, o || (i = [
        F(
          t,
          "pointerup",
          /*onRelease*/
          e[2]
        ),
        F(
          t,
          "pointermove",
          /*onPointerMove*/
          e[1]
        )
      ], o = !0);
    },
    p(l, [a]) {
      s && s.p && (!n || a & /*$$scope*/
      64) && wn(
        s,
        r,
        l,
        /*$$scope*/
        l[6],
        n ? _n(
          r,
          /*$$scope*/
          l[6],
          a,
          Fo
        ) : bn(
          /*$$scope*/
          l[6]
        ),
        Dt
      );
    },
    i(l) {
      n || (P(s, l), n = !0);
    },
    o(l) {
      R(s, l), n = !1;
    },
    d(l) {
      l && k(t), s && s.d(l), o = !1, de(i);
    }
  };
}
function qo(e, t, n) {
  let { $$slots: o = {}, $$scope: i } = t;
  const r = Me();
  let { shape: s } = t, { editor: l } = t, { transform: a } = t, c, u, f;
  const g = (y) => (T) => {
    c = y, u = a.elementToImage(T.offsetX, T.offsetY), f = s, T.target.setPointerCapture(T.pointerId), r("grab", T);
  }, h = (y) => {
    if (c) {
      const [T, p] = a.elementToImage(y.offsetX, y.offsetY), w = [T - u[0], p - u[1]];
      n(3, s = l(f, c, w)), r("change", s);
    }
  }, m = (y) => {
    y.target.releasePointerCapture(y.pointerId), c = void 0, f = s, r("release", y);
  };
  return e.$$set = (y) => {
    "shape" in y && n(3, s = y.shape), "editor" in y && n(4, l = y.editor), "transform" in y && n(5, a = y.transform), "$$scope" in y && n(6, i = y.$$scope);
  }, [g, h, m, s, l, a, i, o];
}
class cn extends oe {
  constructor(t) {
    super(), ne(this, t, qo, Wo, Z, { shape: 3, editor: 4, transform: 5 });
  }
}
const xe = (e, t) => {
  const n = typeof t == "function" ? t(e) : t;
  if (n) {
    const { fill: o, fillOpacity: i, stroke: r, strokeWidth: s, strokeOpacity: l } = n;
    let a = "";
    return o && (a += `fill:${o};`, a += `fill-opacity:${i || "0.25"};`), r && (a += `stroke:${r};`, a += `stroke-width:${s || "1"};`, a += `stroke-opacity:${l || "1"};`), a;
  }
};
function Ko(e, t, n) {
  let o;
  const i = Me();
  let { annotation: r } = t, { editor: s } = t, { style: l } = t, { target: a } = t, { transform: c } = t, { viewportScale: u } = t, f;
  return Re(() => (n(6, f = new s({
    target: a,
    props: {
      shape: r.target.selector,
      computedStyle: o,
      transform: c,
      viewportScale: u
    }
  })), f.$on("change", (g) => {
    f.$$set({ shape: g.detail }), i("change", g.detail);
  }), f.$on("grab", (g) => i("grab", g.detail)), f.$on("release", (g) => i("release", g.detail)), () => {
    f.$destroy();
  })), e.$$set = (g) => {
    "annotation" in g && n(0, r = g.annotation), "editor" in g && n(1, s = g.editor), "style" in g && n(2, l = g.style), "target" in g && n(3, a = g.target), "transform" in g && n(4, c = g.transform), "viewportScale" in g && n(5, u = g.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*annotation, style*/
    5 && (o = xe(r, l)), e.$$.dirty & /*annotation, editorComponent*/
    65 && r && (f == null || f.$set({ shape: r.target.selector })), e.$$.dirty & /*editorComponent, transform*/
    80 && f && f.$set({ transform: c }), e.$$.dirty & /*editorComponent, viewportScale*/
    96 && f && f.$set({ viewportScale: u });
  }, [r, s, l, a, c, u, f];
}
class Jo extends oe {
  constructor(t) {
    super(), ne(this, t, Ko, null, Z, {
      annotation: 0,
      editor: 1,
      style: 2,
      target: 3,
      transform: 4,
      viewportScale: 5
    });
  }
}
function Qo(e, t, n) {
  const o = Me();
  let { drawingMode: i } = t, { target: r } = t, { tool: s } = t, { transform: l } = t, { viewportScale: a } = t, c;
  return Re(() => {
    const u = r.closest("svg"), f = [], g = (h, m, y) => {
      u == null || u.addEventListener(h, m, y), f.push(() => u == null ? void 0 : u.removeEventListener(h, m, y));
    };
    return n(5, c = new s({
      target: r,
      props: {
        addEventListener: g,
        drawingMode: i,
        transform: l,
        viewportScale: a
      }
    })), c.$on("create", (h) => o("create", h.detail)), () => {
      f.forEach((h) => h()), c.$destroy();
    };
  }), e.$$set = (u) => {
    "drawingMode" in u && n(0, i = u.drawingMode), "target" in u && n(1, r = u.target), "tool" in u && n(2, s = u.tool), "transform" in u && n(3, l = u.transform), "viewportScale" in u && n(4, a = u.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*toolComponent, transform*/
    40 && c && c.$set({ transform: l }), e.$$.dirty & /*toolComponent, viewportScale*/
    48 && c && c.$set({ viewportScale: a });
  }, [i, r, s, l, a, c];
}
class Zo extends oe {
  constructor(t) {
    super(), ne(this, t, Qo, null, Z, {
      drawingMode: 0,
      target: 1,
      tool: 2,
      transform: 3,
      viewportScale: 4
    });
  }
}
function Yt(e) {
  let t, n;
  return {
    c() {
      t = C("rect"), n = C("rect"), d(t, "class", "a9s-outer"), d(
        t,
        "x",
        /*x*/
        e[1]
      ), d(
        t,
        "y",
        /*y*/
        e[2]
      ), d(
        t,
        "width",
        /*w*/
        e[3]
      ), d(
        t,
        "height",
        /*h*/
        e[4]
      ), d(n, "class", "a9s-inner"), d(
        n,
        "x",
        /*x*/
        e[1]
      ), d(
        n,
        "y",
        /*y*/
        e[2]
      ), d(
        n,
        "width",
        /*w*/
        e[3]
      ), d(
        n,
        "height",
        /*h*/
        e[4]
      );
    },
    m(o, i) {
      O(o, t, i), O(o, n, i);
    },
    p(o, i) {
      i & /*x*/
      2 && d(
        t,
        "x",
        /*x*/
        o[1]
      ), i & /*y*/
      4 && d(
        t,
        "y",
        /*y*/
        o[2]
      ), i & /*w*/
      8 && d(
        t,
        "width",
        /*w*/
        o[3]
      ), i & /*h*/
      16 && d(
        t,
        "height",
        /*h*/
        o[4]
      ), i & /*x*/
      2 && d(
        n,
        "x",
        /*x*/
        o[1]
      ), i & /*y*/
      4 && d(
        n,
        "y",
        /*y*/
        o[2]
      ), i & /*w*/
      8 && d(
        n,
        "width",
        /*w*/
        o[3]
      ), i & /*h*/
      16 && d(
        n,
        "height",
        /*h*/
        o[4]
      );
    },
    d(o) {
      o && (k(t), k(n));
    }
  };
}
function xo(e) {
  let t, n = (
    /*origin*/
    e[0] && Yt(e)
  );
  return {
    c() {
      t = C("g"), n && n.c(), d(t, "class", "a9s-annotation a9s-rubberband");
    },
    m(o, i) {
      O(o, t, i), n && n.m(t, null);
    },
    p(o, [i]) {
      /*origin*/
      o[0] ? n ? n.p(o, i) : (n = Yt(o), n.c(), n.m(t, null)) : n && (n.d(1), n = null);
    },
    i: H,
    o: H,
    d(o) {
      o && k(t), n && n.d();
    }
  };
}
function $o(e, t, n) {
  const o = Me();
  let { addEventListener: i } = t, { drawingMode: r } = t, { transform: s } = t, l, a, c, u, f, g, h;
  const m = (w) => {
    const _ = w;
    l = performance.now(), r === "drag" && (n(0, a = s.elementToImage(_.offsetX, _.offsetY)), c = a, n(1, u = a[0]), n(2, f = a[1]), n(3, g = 1), n(4, h = 1));
  }, y = (w) => {
    const _ = w;
    a && (c = s.elementToImage(_.offsetX, _.offsetY), n(1, u = Math.min(c[0], a[0])), n(2, f = Math.min(c[1], a[1])), n(3, g = Math.abs(c[0] - a[0])), n(4, h = Math.abs(c[1] - a[1])));
  }, T = (w) => {
    const _ = w, b = performance.now() - l;
    if (r === "click") {
      if (b > 300) return;
      a ? p() : (n(0, a = s.elementToImage(_.offsetX, _.offsetY)), c = a, n(1, u = a[0]), n(2, f = a[1]), n(3, g = 1), n(4, h = 1));
    } else a && (b > 300 || g * h > 100 ? (_.stopPropagation(), p()) : (n(0, a = void 0), c = void 0));
  }, p = () => {
    if (g * h > 15) {
      const w = {
        type: W.RECTANGLE,
        geometry: {
          bounds: {
            minX: u,
            minY: f,
            maxX: u + g,
            maxY: f + h
          },
          x: u,
          y: f,
          w: g,
          h
        }
      };
      o("create", w);
    }
    n(0, a = void 0), c = void 0;
  };
  return Re(() => {
    i("pointerdown", m), i("pointermove", y), i("pointerup", T, !0);
  }), e.$$set = (w) => {
    "addEventListener" in w && n(5, i = w.addEventListener), "drawingMode" in w && n(6, r = w.drawingMode), "transform" in w && n(7, s = w.transform);
  }, [a, u, f, g, h, i, r, s];
}
class ei extends oe {
  constructor(t) {
    super(), ne(this, t, $o, xo, Z, {
      addEventListener: 5,
      drawingMode: 6,
      transform: 7
    });
  }
}
function at(e) {
  const t = e.slice(), n = (
    /*isClosable*/
    (t[2] ? (
      /*points*/
      t[0]
    ) : [
      .../*points*/
      t[0],
      /*cursor*/
      t[1]
    ]).map((o) => o.join(",")).join(" ")
  );
  return t[16] = n, t;
}
function Xt(e) {
  let t, n, o, i, r, s = (
    /*isClosable*/
    e[2] && Rt(e)
  );
  return {
    c() {
      t = C("polygon"), o = C("polygon"), s && s.c(), r = le(), d(t, "class", "a9s-outer"), d(t, "points", n = /*coords*/
      e[16]), d(o, "class", "a9s-inner"), d(o, "points", i = /*coords*/
      e[16]);
    },
    m(l, a) {
      O(l, t, a), O(l, o, a), s && s.m(l, a), O(l, r, a);
    },
    p(l, a) {
      a & /*isClosable, points, cursor*/
      7 && n !== (n = /*coords*/
      l[16]) && d(t, "points", n), a & /*isClosable, points, cursor*/
      7 && i !== (i = /*coords*/
      l[16]) && d(o, "points", i), /*isClosable*/
      l[2] ? s ? s.p(l, a) : (s = Rt(l), s.c(), s.m(r.parentNode, r)) : s && (s.d(1), s = null);
    },
    d(l) {
      l && (k(t), k(o), k(r)), s && s.d(l);
    }
  };
}
function Rt(e) {
  let t, n, o;
  return {
    c() {
      t = C("rect"), d(t, "class", "a9s-corner-handle"), d(t, "x", n = /*points*/
      e[0][0][0] - /*handleSize*/
      e[3] / 2), d(t, "y", o = /*points*/
      e[0][0][1] - /*handleSize*/
      e[3] / 2), d(
        t,
        "height",
        /*handleSize*/
        e[3]
      ), d(
        t,
        "width",
        /*handleSize*/
        e[3]
      );
    },
    m(i, r) {
      O(i, t, r);
    },
    p(i, r) {
      r & /*points, handleSize*/
      9 && n !== (n = /*points*/
      i[0][0][0] - /*handleSize*/
      i[3] / 2) && d(t, "x", n), r & /*points, handleSize*/
      9 && o !== (o = /*points*/
      i[0][0][1] - /*handleSize*/
      i[3] / 2) && d(t, "y", o), r & /*handleSize*/
      8 && d(
        t,
        "height",
        /*handleSize*/
        i[3]
      ), r & /*handleSize*/
      8 && d(
        t,
        "width",
        /*handleSize*/
        i[3]
      );
    },
    d(i) {
      i && k(t);
    }
  };
}
function ti(e) {
  let t, n = (
    /*cursor*/
    e[1] && Xt(at(e))
  );
  return {
    c() {
      t = C("g"), n && n.c(), d(t, "class", "a9s-annotation a9s-rubberband");
    },
    m(o, i) {
      O(o, t, i), n && n.m(t, null);
    },
    p(o, [i]) {
      /*cursor*/
      o[1] ? n ? n.p(at(o), i) : (n = Xt(at(o)), n.c(), n.m(t, null)) : n && (n.d(1), n = null);
    },
    i: H,
    o: H,
    d(o) {
      o && k(t), n && n.d();
    }
  };
}
const ni = 20, oi = 1500;
function ii(e, t, n) {
  let o;
  const i = Me();
  let { addEventListener: r } = t, { drawingMode: s } = t, { transform: l } = t, { viewportScale: a = 1 } = t, c, u = [], f, g, h = !1;
  const m = (_) => {
    const b = _, { timeStamp: I, offsetX: U, offsetY: V } = b;
    if (c = { timeStamp: I, offsetX: U, offsetY: V }, s === "drag" && u.length === 0) {
      const G = l.elementToImage(b.offsetX, b.offsetY);
      u.push(G), n(1, f = G);
    }
  }, y = (_) => {
    const b = _;
    if (g && clearTimeout(g), u.length > 0) {
      if (n(1, f = l.elementToImage(b.offsetX, b.offsetY)), u.length > 2) {
        const I = lt(f, u[0]) * a;
        n(2, h = I < ni);
      }
      b.pointerType === "touch" && (g = setTimeout(
        () => {
          p();
        },
        oi
      ));
    }
  }, T = (_) => {
    const b = _;
    if (g && clearTimeout(g), s === "click") {
      const I = b.timeStamp - c.timeStamp, U = lt([c.offsetX, c.offsetY], [b.offsetX, b.offsetY]);
      if (I > 300 || U > 15) return;
      if (h)
        w();
      else if (u.length === 0) {
        const V = l.elementToImage(b.offsetX, b.offsetY);
        u.push(V), n(1, f = V);
      } else
        u.push(f);
    } else {
      if (u.length === 1 && lt(u[0], f) <= 4) {
        n(0, u = []), n(1, f = void 0);
        return;
      }
      b.stopImmediatePropagation(), h ? w() : u.push(f);
    }
  }, p = () => {
    if (!f) return;
    const _ = [...u, f], b = {
      type: W.POLYGON,
      geometry: { bounds: Qe(_), points: _ }
    };
    mt(b) > 4 && (n(0, u = []), n(1, f = void 0), i("create", b));
  }, w = () => {
    const _ = {
      type: W.POLYGON,
      geometry: {
        bounds: Qe(u),
        points: [...u]
      }
    };
    n(0, u = []), n(1, f = void 0), i("create", _);
  };
  return Re(() => {
    r("pointerdown", m, !0), r("pointermove", y), r("pointerup", T, !0), r("dblclick", p, !0);
  }), e.$$set = (_) => {
    "addEventListener" in _ && n(4, r = _.addEventListener), "drawingMode" in _ && n(5, s = _.drawingMode), "transform" in _ && n(6, l = _.transform), "viewportScale" in _ && n(7, a = _.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*viewportScale*/
    128 && n(3, o = 10 / a);
  }, [
    u,
    f,
    h,
    o,
    r,
    s,
    l,
    a
  ];
}
class ri extends oe {
  constructor(t) {
    super(), ne(this, t, ii, ti, Z, {
      addEventListener: 4,
      drawingMode: 5,
      transform: 6,
      viewportScale: 7
    });
  }
}
const bt = /* @__PURE__ */ new Map([
  ["rectangle", { tool: ei }],
  ["polygon", { tool: ri }]
]), fn = () => [...bt.keys()], un = (e) => bt.get(e), si = (e, t, n) => bt.set(e, { tool: t, opts: n });
function li(e) {
  let t, n, o, i, r;
  return {
    c() {
      t = C("g"), n = C("ellipse"), i = C("ellipse"), d(n, "class", "a9s-outer"), d(n, "style", o = /*computedStyle*/
      e[1] ? "display:none;" : void 0), d(
        n,
        "cx",
        /*cx*/
        e[2]
      ), d(
        n,
        "cy",
        /*cy*/
        e[3]
      ), d(
        n,
        "rx",
        /*rx*/
        e[4]
      ), d(
        n,
        "ry",
        /*ry*/
        e[5]
      ), d(i, "class", "a9s-inner"), d(
        i,
        "style",
        /*computedStyle*/
        e[1]
      ), d(
        i,
        "cx",
        /*cx*/
        e[2]
      ), d(
        i,
        "cy",
        /*cy*/
        e[3]
      ), d(
        i,
        "rx",
        /*rx*/
        e[4]
      ), d(
        i,
        "ry",
        /*ry*/
        e[5]
      ), d(t, "class", "a9s-annotation"), d(t, "data-id", r = /*annotation*/
      e[0].id);
    },
    m(s, l) {
      O(s, t, l), ue(t, n), ue(t, i);
    },
    p(s, [l]) {
      l & /*computedStyle*/
      2 && o !== (o = /*computedStyle*/
      s[1] ? "display:none;" : void 0) && d(n, "style", o), l & /*computedStyle*/
      2 && d(
        i,
        "style",
        /*computedStyle*/
        s[1]
      ), l & /*annotation*/
      1 && r !== (r = /*annotation*/
      s[0].id) && d(t, "data-id", r);
    },
    i: H,
    o: H,
    d(s) {
      s && k(t);
    }
  };
}
function ai(e, t, n) {
  let o, { annotation: i } = t, { geom: r } = t, { style: s } = t;
  const { cx: l, cy: a, rx: c, ry: u } = r;
  return e.$$set = (f) => {
    "annotation" in f && n(0, i = f.annotation), "geom" in f && n(6, r = f.geom), "style" in f && n(7, s = f.style);
  }, e.$$.update = () => {
    e.$$.dirty & /*annotation, style*/
    129 && n(1, o = xe(i, s));
  }, [i, o, l, a, c, u, r, s];
}
class ci extends oe {
  constructor(t) {
    super(), ne(this, t, ai, li, Z, { annotation: 0, geom: 6, style: 7 });
  }
}
function fi(e) {
  let t, n, o, i, r;
  return {
    c() {
      t = C("g"), n = C("polygon"), i = C("polygon"), d(n, "class", "a9s-outer"), d(n, "style", o = /*computedStyle*/
      e[1] ? "display:none;" : void 0), d(
        n,
        "points",
        /*points*/
        e[2].map(ui).join(" ")
      ), d(i, "class", "a9s-inner"), d(
        i,
        "style",
        /*computedStyle*/
        e[1]
      ), d(
        i,
        "points",
        /*points*/
        e[2].map(di).join(" ")
      ), d(t, "class", "a9s-annotation"), d(t, "data-id", r = /*annotation*/
      e[0].id);
    },
    m(s, l) {
      O(s, t, l), ue(t, n), ue(t, i);
    },
    p(s, [l]) {
      l & /*computedStyle*/
      2 && o !== (o = /*computedStyle*/
      s[1] ? "display:none;" : void 0) && d(n, "style", o), l & /*computedStyle*/
      2 && d(
        i,
        "style",
        /*computedStyle*/
        s[1]
      ), l & /*annotation*/
      1 && r !== (r = /*annotation*/
      s[0].id) && d(t, "data-id", r);
    },
    i: H,
    o: H,
    d(s) {
      s && k(t);
    }
  };
}
const ui = (e) => e.join(","), di = (e) => e.join(",");
function hi(e, t, n) {
  let o, { annotation: i } = t, { geom: r } = t, { style: s } = t;
  const { points: l } = r;
  return e.$$set = (a) => {
    "annotation" in a && n(0, i = a.annotation), "geom" in a && n(3, r = a.geom), "style" in a && n(4, s = a.style);
  }, e.$$.update = () => {
    e.$$.dirty & /*annotation, style*/
    17 && n(1, o = xe(i, s));
  }, [i, o, l, r, s];
}
class gi extends oe {
  constructor(t) {
    super(), ne(this, t, hi, fi, Z, { annotation: 0, geom: 3, style: 4 });
  }
}
function mi(e) {
  let t, n, o, i, r;
  return {
    c() {
      t = C("g"), n = C("rect"), i = C("rect"), d(n, "class", "a9s-outer"), d(n, "style", o = /*computedStyle*/
      e[5] ? "display:none;" : void 0), d(
        n,
        "x",
        /*x*/
        e[4]
      ), d(
        n,
        "y",
        /*y*/
        e[3]
      ), d(
        n,
        "width",
        /*w*/
        e[2]
      ), d(
        n,
        "height",
        /*h*/
        e[1]
      ), d(i, "class", "a9s-inner"), d(
        i,
        "style",
        /*computedStyle*/
        e[5]
      ), d(
        i,
        "x",
        /*x*/
        e[4]
      ), d(
        i,
        "y",
        /*y*/
        e[3]
      ), d(
        i,
        "width",
        /*w*/
        e[2]
      ), d(
        i,
        "height",
        /*h*/
        e[1]
      ), d(t, "class", "a9s-annotation"), d(t, "data-id", r = /*annotation*/
      e[0].id);
    },
    m(s, l) {
      O(s, t, l), ue(t, n), ue(t, i);
    },
    p(s, [l]) {
      l & /*computedStyle*/
      32 && o !== (o = /*computedStyle*/
      s[5] ? "display:none;" : void 0) && d(n, "style", o), l & /*x*/
      16 && d(
        n,
        "x",
        /*x*/
        s[4]
      ), l & /*y*/
      8 && d(
        n,
        "y",
        /*y*/
        s[3]
      ), l & /*w*/
      4 && d(
        n,
        "width",
        /*w*/
        s[2]
      ), l & /*h*/
      2 && d(
        n,
        "height",
        /*h*/
        s[1]
      ), l & /*computedStyle*/
      32 && d(
        i,
        "style",
        /*computedStyle*/
        s[5]
      ), l & /*x*/
      16 && d(
        i,
        "x",
        /*x*/
        s[4]
      ), l & /*y*/
      8 && d(
        i,
        "y",
        /*y*/
        s[3]
      ), l & /*w*/
      4 && d(
        i,
        "width",
        /*w*/
        s[2]
      ), l & /*h*/
      2 && d(
        i,
        "height",
        /*h*/
        s[1]
      ), l & /*annotation*/
      1 && r !== (r = /*annotation*/
      s[0].id) && d(t, "data-id", r);
    },
    i: H,
    o: H,
    d(s) {
      s && k(t);
    }
  };
}
function pi(e, t, n) {
  let o, i, r, s, l, { annotation: a } = t, { geom: c } = t, { style: u } = t;
  return e.$$set = (f) => {
    "annotation" in f && n(0, a = f.annotation), "geom" in f && n(6, c = f.geom), "style" in f && n(7, u = f.style);
  }, e.$$.update = () => {
    e.$$.dirty & /*annotation, style*/
    129 && n(5, o = xe(a, u)), e.$$.dirty & /*geom*/
    64 && n(4, { x: i, y: r, w: s, h: l } = c, i, (n(3, r), n(6, c)), (n(2, s), n(6, c)), (n(1, l), n(6, c)));
  }, [a, l, s, r, i, o, c, u];
}
class yi extends oe {
  constructor(t) {
    super(), ne(this, t, pi, mi, Z, { annotation: 0, geom: 6, style: 7 });
  }
}
const Fi = {
  elementToImage: (e, t) => [e, t]
}, _i = (e) => ({
  elementToImage: (t, n) => {
    const o = e.getBoundingClientRect(), i = e.createSVGPoint();
    i.x = t + o.x, i.y = n + o.y;
    const { x: r, y: s } = i.matrixTransform(e.getScreenCTM().inverse());
    return [r, s];
  }
}), wi = 250, bi = (e, t) => {
  const n = Me();
  let o;
  return { onPointerDown: () => o = performance.now(), onPointerUp: (s) => {
    if (performance.now() - o < wi) {
      const { x: a, y: c } = dn(s, e), u = t.getAt(a, c);
      u ? n("click", { originalEvent: s, annotation: u }) : n("click", { originalEvent: s });
    }
  } };
}, dn = (e, t) => {
  const n = t.createSVGPoint(), o = t.getBoundingClientRect(), i = e.clientX - o.x, r = e.clientY - o.y, { left: s, top: l } = t.getBoundingClientRect();
  return n.x = i + s, n.y = r + l, n.matrixTransform(t.getScreenCTM().inverse());
};
function Ct(e, t, n) {
  const o = e.slice();
  o[35] = t[n];
  const i = (
    /*getEditor*/
    o[23](
      /*editable*/
      o[35].target.selector
    )
  );
  return o[36] = i, o;
}
function Nt(e, t, n) {
  const o = e.slice();
  return o[39] = t[n], o;
}
function ct(e) {
  const t = e.slice(), n = (
    /*annotation*/
    t[39].target.selector
  );
  return t[42] = n, t;
}
function Ut(e) {
  let t = (
    /*annotation*/
    e[39].id
  ), n, o, i = Vt(e);
  return {
    c() {
      i.c(), n = le();
    },
    m(r, s) {
      i.m(r, s), O(r, n, s), o = !0;
    },
    p(r, s) {
      s[0] & /*$store*/
      32768 && Z(t, t = /*annotation*/
      r[39].id) ? (re(), R(i, 1, 1, H), se(), i = Vt(r), i.c(), P(i, 1), i.m(n.parentNode, n)) : i.p(r, s);
    },
    i(r) {
      o || (P(i), o = !0);
    },
    o(r) {
      R(i), o = !1;
    },
    d(r) {
      r && k(n), i.d(r);
    }
  };
}
function Ei(e) {
  let t, n;
  return t = new gi({
    props: {
      annotation: (
        /*annotation*/
        e[39]
      ),
      geom: (
        /*selector*/
        e[42].geometry
      ),
      style: (
        /*style*/
        e[1]
      )
    }
  }), {
    c() {
      te(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      const r = {};
      i[0] & /*$store*/
      32768 && (r.annotation = /*annotation*/
      o[39]), i[0] & /*$store*/
      32768 && (r.geom = /*selector*/
      o[42].geometry), i[0] & /*style*/
      2 && (r.style = /*style*/
      o[1]), t.$set(r);
    },
    i(o) {
      n || (P(t.$$.fragment, o), n = !0);
    },
    o(o) {
      R(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Ai(e) {
  let t, n;
  return t = new yi({
    props: {
      annotation: (
        /*annotation*/
        e[39]
      ),
      geom: (
        /*selector*/
        e[42].geometry
      ),
      style: (
        /*style*/
        e[1]
      )
    }
  }), {
    c() {
      te(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      const r = {};
      i[0] & /*$store*/
      32768 && (r.annotation = /*annotation*/
      o[39]), i[0] & /*$store*/
      32768 && (r.geom = /*selector*/
      o[42].geometry), i[0] & /*style*/
      2 && (r.style = /*style*/
      o[1]), t.$set(r);
    },
    i(o) {
      n || (P(t.$$.fragment, o), n = !0);
    },
    o(o) {
      R(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Si(e) {
  var o;
  let t, n;
  return t = new ci({
    props: {
      annotation: (
        /*annotation*/
        e[39]
      ),
      geom: (
        /*selector*/
        (o = e[42]) == null ? void 0 : o.geometry
      ),
      style: (
        /*style*/
        e[1]
      )
    }
  }), {
    c() {
      te(t.$$.fragment);
    },
    m(i, r) {
      x(t, i, r), n = !0;
    },
    p(i, r) {
      var l;
      const s = {};
      r[0] & /*$store*/
      32768 && (s.annotation = /*annotation*/
      i[39]), r[0] & /*$store*/
      32768 && (s.geom = /*selector*/
      (l = i[42]) == null ? void 0 : l.geometry), r[0] & /*style*/
      2 && (s.style = /*style*/
      i[1]), t.$set(s);
    },
    i(i) {
      n || (P(t.$$.fragment, i), n = !0);
    },
    o(i) {
      R(t.$$.fragment, i), n = !1;
    },
    d(i) {
      $(t, i);
    }
  };
}
function Vt(e) {
  let t, n, o, i;
  const r = [Si, Ai, Ei], s = [];
  function l(a, c) {
    var u, f, g;
    return (
      /*selector*/
      ((u = a[42]) == null ? void 0 : u.type) === W.ELLIPSE ? 0 : (
        /*selector*/
        ((f = a[42]) == null ? void 0 : f.type) === W.RECTANGLE ? 1 : (
          /*selector*/
          ((g = a[42]) == null ? void 0 : g.type) === W.POLYGON ? 2 : -1
        )
      )
    );
  }
  return ~(t = l(e)) && (n = s[t] = r[t](e)), {
    c() {
      n && n.c(), o = le();
    },
    m(a, c) {
      ~t && s[t].m(a, c), O(a, o, c), i = !0;
    },
    p(a, c) {
      let u = t;
      t = l(a), t === u ? ~t && s[t].p(a, c) : (n && (re(), R(s[u], 1, 1, () => {
        s[u] = null;
      }), se()), ~t ? (n = s[t], n ? n.p(a, c) : (n = s[t] = r[t](a), n.c()), P(n, 1), n.m(o.parentNode, o)) : n = null);
    },
    i(a) {
      i || (P(n), i = !0);
    },
    o(a) {
      R(n), i = !1;
    },
    d(a) {
      a && k(o), ~t && s[t].d(a);
    }
  };
}
function Gt(e) {
  let t = Ze(
    /*annotation*/
    e[39]
  ) && !/*isEditable*/
  e[8](
    /*annotation*/
    e[39]
  ), n, o, i = t && Ut(ct(e));
  return {
    c() {
      i && i.c(), n = le();
    },
    m(r, s) {
      i && i.m(r, s), O(r, n, s), o = !0;
    },
    p(r, s) {
      s[0] & /*$store, isEditable*/
      33024 && (t = Ze(
        /*annotation*/
        r[39]
      ) && !/*isEditable*/
      r[8](
        /*annotation*/
        r[39]
      )), t ? i ? (i.p(ct(r), s), s[0] & /*$store, isEditable*/
      33024 && P(i, 1)) : (i = Ut(ct(r)), i.c(), P(i, 1), i.m(n.parentNode, n)) : i && (re(), R(i, 1, 1, () => {
        i = null;
      }), se());
    },
    i(r) {
      o || (P(i), o = !0);
    },
    o(r) {
      R(i), o = !1;
    },
    d(r) {
      r && k(n), i && i.d(r);
    }
  };
}
function jt(e) {
  let t, n, o, i;
  const r = [Ti, vi], s = [];
  function l(a, c) {
    return (
      /*editableAnnotations*/
      a[7] ? 0 : (
        /*tool*/
        a[13] && /*drawingEnabled*/
        a[0] ? 1 : -1
      )
    );
  }
  return ~(t = l(e)) && (n = s[t] = r[t](e)), {
    c() {
      n && n.c(), o = le();
    },
    m(a, c) {
      ~t && s[t].m(a, c), O(a, o, c), i = !0;
    },
    p(a, c) {
      let u = t;
      t = l(a), t === u ? ~t && s[t].p(a, c) : (n && (re(), R(s[u], 1, 1, () => {
        s[u] = null;
      }), se()), ~t ? (n = s[t], n ? n.p(a, c) : (n = s[t] = r[t](a), n.c()), P(n, 1), n.m(o.parentNode, o)) : n = null);
    },
    i(a) {
      i || (P(n), i = !0);
    },
    o(a) {
      R(n), i = !1;
    },
    d(a) {
      a && k(o), ~t && s[t].d(a);
    }
  };
}
function vi(e) {
  let t = (
    /*toolName*/
    e[2]
  ), n, o, i = zt(e);
  return {
    c() {
      i.c(), n = le();
    },
    m(r, s) {
      i.m(r, s), O(r, n, s), o = !0;
    },
    p(r, s) {
      s[0] & /*toolName*/
      4 && Z(t, t = /*toolName*/
      r[2]) ? (re(), R(i, 1, 1, H), se(), i = zt(r), i.c(), P(i, 1), i.m(n.parentNode, n)) : i.p(r, s);
    },
    i(r) {
      o || (P(i), o = !0);
    },
    o(r) {
      R(i), o = !1;
    },
    d(r) {
      r && k(n), i.d(r);
    }
  };
}
function Ti(e) {
  let t, n, o = Te(
    /*editableAnnotations*/
    e[7]
  ), i = [];
  for (let s = 0; s < o.length; s += 1)
    i[s] = Wt(Ct(e, o, s));
  const r = (s) => R(i[s], 1, 1, () => {
    i[s] = null;
  });
  return {
    c() {
      for (let s = 0; s < i.length; s += 1)
        i[s].c();
      t = le();
    },
    m(s, l) {
      for (let a = 0; a < i.length; a += 1)
        i[a] && i[a].m(s, l);
      O(s, t, l), n = !0;
    },
    p(s, l) {
      if (l[0] & /*editableAnnotations, drawingEl, getEditor, style, transform, $scale, onChangeSelected*/
      10553506) {
        o = Te(
          /*editableAnnotations*/
          s[7]
        );
        let a;
        for (a = 0; a < o.length; a += 1) {
          const c = Ct(s, o, a);
          i[a] ? (i[a].p(c, l), P(i[a], 1)) : (i[a] = Wt(c), i[a].c(), P(i[a], 1), i[a].m(t.parentNode, t));
        }
        for (re(), a = o.length; a < i.length; a += 1)
          r(a);
        se();
      }
    },
    i(s) {
      if (!n) {
        for (let l = 0; l < o.length; l += 1)
          P(i[l]);
        n = !0;
      }
    },
    o(s) {
      i = i.filter(Boolean);
      for (let l = 0; l < i.length; l += 1)
        R(i[l]);
      n = !1;
    },
    d(s) {
      s && k(t), pt(i, s);
    }
  };
}
function zt(e) {
  let t, n;
  return t = new Zo({
    props: {
      target: (
        /*drawingEl*/
        e[5]
      ),
      tool: (
        /*tool*/
        e[13]
      ),
      drawingMode: (
        /*drawingMode*/
        e[12]
      ),
      transform: (
        /*transform*/
        e[11]
      ),
      viewportScale: (
        /*$scale*/
        e[16]
      )
    }
  }), t.$on(
    "create",
    /*onSelectionCreated*/
    e[20]
  ), {
    c() {
      te(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      const r = {};
      i[0] & /*drawingEl*/
      32 && (r.target = /*drawingEl*/
      o[5]), i[0] & /*tool*/
      8192 && (r.tool = /*tool*/
      o[13]), i[0] & /*drawingMode*/
      4096 && (r.drawingMode = /*drawingMode*/
      o[12]), i[0] & /*transform*/
      2048 && (r.transform = /*transform*/
      o[11]), i[0] & /*$scale*/
      65536 && (r.viewportScale = /*$scale*/
      o[16]), t.$set(r);
    },
    i(o) {
      n || (P(t.$$.fragment, o), n = !0);
    },
    o(o) {
      R(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Ht(e) {
  let t = (
    /*editable*/
    e[35].id
  ), n, o, i = Ft(e);
  return {
    c() {
      i.c(), n = le();
    },
    m(r, s) {
      i.m(r, s), O(r, n, s), o = !0;
    },
    p(r, s) {
      s[0] & /*editableAnnotations*/
      128 && Z(t, t = /*editable*/
      r[35].id) ? (re(), R(i, 1, 1, H), se(), i = Ft(r), i.c(), P(i, 1), i.m(n.parentNode, n)) : i.p(r, s);
    },
    i(r) {
      o || (P(i), o = !0);
    },
    o(r) {
      R(i), o = !1;
    },
    d(r) {
      r && k(n), i.d(r);
    }
  };
}
function Ft(e) {
  let t, n;
  return t = new Jo({
    props: {
      target: (
        /*drawingEl*/
        e[5]
      ),
      editor: (
        /*getEditor*/
        e[23](
          /*editable*/
          e[35].target.selector
        )
      ),
      annotation: (
        /*editable*/
        e[35]
      ),
      style: (
        /*style*/
        e[1]
      ),
      transform: (
        /*transform*/
        e[11]
      ),
      viewportScale: (
        /*$scale*/
        e[16]
      )
    }
  }), t.$on("change", function() {
    q(
      /*onChangeSelected*/
      e[21](
        /*editable*/
        e[35]
      )
    ) && e[21](
      /*editable*/
      e[35]
    ).apply(this, arguments);
  }), {
    c() {
      te(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      e = o;
      const r = {};
      i[0] & /*drawingEl*/
      32 && (r.target = /*drawingEl*/
      e[5]), i[0] & /*editableAnnotations*/
      128 && (r.editor = /*getEditor*/
      e[23](
        /*editable*/
        e[35].target.selector
      )), i[0] & /*editableAnnotations*/
      128 && (r.annotation = /*editable*/
      e[35]), i[0] & /*style*/
      2 && (r.style = /*style*/
      e[1]), i[0] & /*transform*/
      2048 && (r.transform = /*transform*/
      e[11]), i[0] & /*$scale*/
      65536 && (r.viewportScale = /*$scale*/
      e[16]), t.$set(r);
    },
    i(o) {
      n || (P(t.$$.fragment, o), n = !0);
    },
    o(o) {
      R(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Wt(e) {
  let t, n, o = (
    /*editor*/
    e[36] && Ht(e)
  );
  return {
    c() {
      o && o.c(), t = le();
    },
    m(i, r) {
      o && o.m(i, r), O(i, t, r), n = !0;
    },
    p(i, r) {
      /*editor*/
      i[36] ? o ? (o.p(i, r), r[0] & /*editableAnnotations*/
      128 && P(o, 1)) : (o = Ht(i), o.c(), P(o, 1), o.m(t.parentNode, t)) : o && (re(), R(o, 1, 1, () => {
        o = null;
      }), se());
    },
    i(i) {
      n || (P(o), n = !0);
    },
    o(i) {
      R(o), n = !1;
    },
    d(i) {
      i && k(t), o && o.d(i);
    }
  };
}
function Mi(e) {
  let t, n, o, i, r, s, l = Te(
    /*$store*/
    e[15].filter(
      /*func*/
      e[30]
    )
  ), a = [];
  for (let f = 0; f < l.length; f += 1)
    a[f] = Gt(Nt(e, l, f));
  const c = (f) => R(a[f], 1, 1, () => {
    a[f] = null;
  });
  let u = (
    /*drawingEl*/
    e[5] && jt(e)
  );
  return {
    c() {
      t = C("svg"), n = C("g");
      for (let f = 0; f < a.length; f += 1)
        a[f].c();
      o = C("g"), u && u.c(), d(o, "class", "drawing"), d(t, "class", "a9s-annotationlayer"), me(
        t,
        "drawing",
        /*tool*/
        e[13]
      ), me(t, "hidden", !/*visible*/
      e[3]), me(
        t,
        "hover",
        /*$hover*/
        e[14]
      );
    },
    m(f, g) {
      O(f, t, g), ue(t, n);
      for (let h = 0; h < a.length; h += 1)
        a[h] && a[h].m(n, null);
      ue(t, o), u && u.m(o, null), e[31](o), e[32](t), i = !0, r || (s = [
        F(t, "pointerup", function() {
          q(
            /*onPointerUp*/
            e[9]
          ) && e[9].apply(this, arguments);
        }),
        F(t, "pointerdown", function() {
          q(
            /*onPointerDown*/
            e[10]
          ) && e[10].apply(this, arguments);
        }),
        F(
          t,
          "pointermove",
          /*onPointerMove*/
          e[22]
        )
      ], r = !0);
    },
    p(f, g) {
      if (e = f, g[0] & /*$store, style, isEditable*/
      33026) {
        l = Te(
          /*$store*/
          e[15].filter(
            /*func*/
            e[30]
          )
        );
        let h;
        for (h = 0; h < l.length; h += 1) {
          const m = Nt(e, l, h);
          a[h] ? (a[h].p(m, g), P(a[h], 1)) : (a[h] = Gt(m), a[h].c(), P(a[h], 1), a[h].m(n, null));
        }
        for (re(), h = l.length; h < a.length; h += 1)
          c(h);
        se();
      }
      /*drawingEl*/
      e[5] ? u ? (u.p(e, g), g[0] & /*drawingEl*/
      32 && P(u, 1)) : (u = jt(e), u.c(), P(u, 1), u.m(o, null)) : u && (re(), R(u, 1, 1, () => {
        u = null;
      }), se()), (!i || g[0] & /*tool*/
      8192) && me(
        t,
        "drawing",
        /*tool*/
        e[13]
      ), (!i || g[0] & /*visible*/
      8) && me(t, "hidden", !/*visible*/
      e[3]), (!i || g[0] & /*$hover*/
      16384) && me(
        t,
        "hover",
        /*$hover*/
        e[14]
      );
    },
    i(f) {
      if (!i) {
        for (let g = 0; g < l.length; g += 1)
          P(a[g]);
        P(u), i = !0;
      }
    },
    o(f) {
      a = a.filter(Boolean);
      for (let g = 0; g < a.length; g += 1)
        R(a[g]);
      R(u), i = !1;
    },
    d(f) {
      f && k(t), pt(a, f), u && u.d(), e[31](null), e[32](null), r = !1, de(s);
    }
  };
}
function Li(e, t, n) {
  let o, i, r, s, l, a, c, u, f, g, h, m = H, y = () => (m(), m = Zt(E, (L) => n(16, h = L)), E);
  e.$$.on_destroy.push(() => m());
  let { drawingEnabled: T } = t, { image: p } = t, { preferredDrawingMode: w } = t, { state: _ } = t, { style: b = void 0 } = t, { toolName: I = fn()[0] } = t, { user: U } = t, { visible: V = !0 } = t, G, D, E;
  Re(() => y(n(6, E = Do(p, D))));
  const { hover: A, selection: S, store: v } = _;
  et(e, A, (L) => n(14, u = L)), et(e, S, (L) => n(29, f = L)), et(e, v, (L) => n(15, g = L));
  let N, X;
  const K = (L) => {
    N && v.unobserve(N);
    const Y = L.filter(({ editable: j }) => j).map(({ id: j }) => j);
    Y.length > 0 ? (n(7, X = Y.map((j) => v.getAnnotation(j)).filter((j) => j && Ze(j))), N = (j) => {
      const { updated: ee } = j.changes;
      n(7, X = ee == null ? void 0 : ee.map((B) => B.newValue));
    }, v.observe(N, { annotations: Y })) : n(7, X = void 0);
  }, ge = (L) => {
    const Y = on(), j = {
      id: Y,
      bodies: [],
      target: {
        annotation: Y,
        selector: L.detail,
        creator: U,
        created: /* @__PURE__ */ new Date()
      }
    };
    v.addAnnotation(j), S.setSelected(j.id);
  }, ae = (L) => (Y) => {
    var M;
    const { target: j } = L, ee = 10 * 60 * 1e3, B = ((M = j.creator) == null ? void 0 : M.id) !== U.id || !j.created || (/* @__PURE__ */ new Date()).getTime() - j.created.getTime() > ee;
    v.updateTarget({
      ...j,
      selector: Y.detail,
      created: B ? j.created : /* @__PURE__ */ new Date(),
      updated: B ? /* @__PURE__ */ new Date() : void 0,
      updatedBy: B ? U : void 0
    });
  }, Le = (L) => {
    const { x: Y, y: j } = dn(L, D), ee = v.getAt(Y, j);
    ee ? u !== ee.id && A.set(ee.id) : A.set(void 0);
  }, ce = (L) => zo(L), ke = (L) => Ze(L);
  function fe(L) {
    Je[L ? "unshift" : "push"](() => {
      G = L, n(5, G);
    });
  }
  function Ie(L) {
    Je[L ? "unshift" : "push"](() => {
      D = L, n(4, D);
    });
  }
  return e.$$set = (L) => {
    "drawingEnabled" in L && n(0, T = L.drawingEnabled), "image" in L && n(24, p = L.image), "preferredDrawingMode" in L && n(25, w = L.preferredDrawingMode), "state" in L && n(26, _ = L.state), "style" in L && n(1, b = L.style), "toolName" in L && n(2, I = L.toolName), "user" in L && n(27, U = L.user), "visible" in L && n(3, V = L.visible);
  }, e.$$.update = () => {
    e.$$.dirty[0] & /*toolName*/
    4 && n(13, { tool: o, opts: i } = un(I) || { tool: void 0, opts: void 0 }, o, (n(28, i), n(2, I))), e.$$.dirty[0] & /*opts, preferredDrawingMode*/
    301989888 && n(12, r = (i == null ? void 0 : i.drawingMode) || w), e.$$.dirty[0] & /*svgEl*/
    16 && n(11, s = _i(D)), e.$$.dirty[0] & /*svgEl*/
    16 && n(10, { onPointerDown: l, onPointerUp: a } = bi(D, v), l, (n(9, a), n(4, D))), e.$$.dirty[0] & /*$selection*/
    536870912 && n(8, c = (L) => f.selected.find((Y) => Y.id === L.id && Y.editable)), e.$$.dirty[0] & /*$selection*/
    536870912 && K(f.selected);
  }, [
    T,
    b,
    I,
    V,
    D,
    G,
    E,
    X,
    c,
    a,
    l,
    s,
    r,
    o,
    u,
    g,
    h,
    A,
    S,
    v,
    ge,
    ae,
    Le,
    ce,
    p,
    w,
    _,
    U,
    i,
    f,
    ke,
    fe,
    Ie
  ];
}
class ki extends oe {
  constructor(t) {
    super(), ne(
      this,
      t,
      Li,
      Mi,
      Z,
      {
        drawingEnabled: 0,
        image: 24,
        preferredDrawingMode: 25,
        state: 26,
        style: 1,
        toolName: 2,
        user: 27,
        visible: 3
      },
      null,
      [-1, -1]
    );
  }
}
function hn(e, t, n = 0, o = e.length - 1, i = Ii) {
  for (; o > n; ) {
    if (o - n > 600) {
      const a = o - n + 1, c = t - n + 1, u = Math.log(a), f = 0.5 * Math.exp(2 * u / 3), g = 0.5 * Math.sqrt(u * f * (a - f) / a) * (c - a / 2 < 0 ? -1 : 1), h = Math.max(n, Math.floor(t - c * f / a + g)), m = Math.min(o, Math.floor(t + (a - c) * f / a + g));
      hn(e, t, h, m, i);
    }
    const r = e[t];
    let s = n, l = o;
    for (Oe(e, n, t), i(e[o], r) > 0 && Oe(e, n, o); s < l; ) {
      for (Oe(e, s, l), s++, l--; i(e[s], r) < 0; ) s++;
      for (; i(e[l], r) > 0; ) l--;
    }
    i(e[n], r) === 0 ? Oe(e, n, l) : (l++, Oe(e, l, o)), l <= t && (n = l + 1), t <= l && (o = l - 1);
  }
}
function Oe(e, t, n) {
  const o = e[t];
  e[t] = e[n], e[n] = o;
}
function Ii(e, t) {
  return e < t ? -1 : e > t ? 1 : 0;
}
class Oi {
  constructor(t = 9) {
    this._maxEntries = Math.max(4, t), this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4)), this.clear();
  }
  all() {
    return this._all(this.data, []);
  }
  search(t) {
    let n = this.data;
    const o = [];
    if (!Fe(t, n)) return o;
    const i = this.toBBox, r = [];
    for (; n; ) {
      for (let s = 0; s < n.children.length; s++) {
        const l = n.children[s], a = n.leaf ? i(l) : l;
        Fe(t, a) && (n.leaf ? o.push(l) : ut(t, a) ? this._all(l, o) : r.push(l));
      }
      n = r.pop();
    }
    return o;
  }
  collides(t) {
    let n = this.data;
    if (!Fe(t, n)) return !1;
    const o = [];
    for (; n; ) {
      for (let i = 0; i < n.children.length; i++) {
        const r = n.children[i], s = n.leaf ? this.toBBox(r) : r;
        if (Fe(t, s)) {
          if (n.leaf || ut(t, s)) return !0;
          o.push(r);
        }
      }
      n = o.pop();
    }
    return !1;
  }
  load(t) {
    if (!(t && t.length)) return this;
    if (t.length < this._minEntries) {
      for (let o = 0; o < t.length; o++)
        this.insert(t[o]);
      return this;
    }
    let n = this._build(t.slice(), 0, t.length - 1, 0);
    if (!this.data.children.length)
      this.data = n;
    else if (this.data.height === n.height)
      this._splitRoot(this.data, n);
    else {
      if (this.data.height < n.height) {
        const o = this.data;
        this.data = n, n = o;
      }
      this._insert(n, this.data.height - n.height - 1, !0);
    }
    return this;
  }
  insert(t) {
    return t && this._insert(t, this.data.height - 1), this;
  }
  clear() {
    return this.data = Se([]), this;
  }
  remove(t, n) {
    if (!t) return this;
    let o = this.data;
    const i = this.toBBox(t), r = [], s = [];
    let l, a, c;
    for (; o || r.length; ) {
      if (o || (o = r.pop(), a = r[r.length - 1], l = s.pop(), c = !0), o.leaf) {
        const u = Bi(t, o.children, n);
        if (u !== -1)
          return o.children.splice(u, 1), r.push(o), this._condense(r), this;
      }
      !c && !o.leaf && ut(o, i) ? (r.push(o), s.push(l), l = 0, a = o, o = o.children[0]) : a ? (l++, o = a.children[l], c = !1) : o = null;
    }
    return this;
  }
  toBBox(t) {
    return t;
  }
  compareMinX(t, n) {
    return t.minX - n.minX;
  }
  compareMinY(t, n) {
    return t.minY - n.minY;
  }
  toJSON() {
    return this.data;
  }
  fromJSON(t) {
    return this.data = t, this;
  }
  _all(t, n) {
    const o = [];
    for (; t; )
      t.leaf ? n.push(...t.children) : o.push(...t.children), t = o.pop();
    return n;
  }
  _build(t, n, o, i) {
    const r = o - n + 1;
    let s = this._maxEntries, l;
    if (r <= s)
      return l = Se(t.slice(n, o + 1)), Ee(l, this.toBBox), l;
    i || (i = Math.ceil(Math.log(r) / Math.log(s)), s = Math.ceil(r / Math.pow(s, i - 1))), l = Se([]), l.leaf = !1, l.height = i;
    const a = Math.ceil(r / s), c = a * Math.ceil(Math.sqrt(s));
    qt(t, n, o, c, this.compareMinX);
    for (let u = n; u <= o; u += c) {
      const f = Math.min(u + c - 1, o);
      qt(t, u, f, a, this.compareMinY);
      for (let g = u; g <= f; g += a) {
        const h = Math.min(g + a - 1, f);
        l.children.push(this._build(t, g, h, i - 1));
      }
    }
    return Ee(l, this.toBBox), l;
  }
  _chooseSubtree(t, n, o, i) {
    for (; i.push(n), !(n.leaf || i.length - 1 === o); ) {
      let r = 1 / 0, s = 1 / 0, l;
      for (let a = 0; a < n.children.length; a++) {
        const c = n.children[a], u = ft(c), f = Yi(t, c) - u;
        f < s ? (s = f, r = u < r ? u : r, l = c) : f === s && u < r && (r = u, l = c);
      }
      n = l || n.children[0];
    }
    return n;
  }
  _insert(t, n, o) {
    const i = o ? t : this.toBBox(t), r = [], s = this._chooseSubtree(i, this.data, n, r);
    for (s.children.push(t), De(s, i); n >= 0 && r[n].children.length > this._maxEntries; )
      this._split(r, n), n--;
    this._adjustParentBBoxes(i, r, n);
  }
  // split overflowed node into two
  _split(t, n) {
    const o = t[n], i = o.children.length, r = this._minEntries;
    this._chooseSplitAxis(o, r, i);
    const s = this._chooseSplitIndex(o, r, i), l = Se(o.children.splice(s, o.children.length - s));
    l.height = o.height, l.leaf = o.leaf, Ee(o, this.toBBox), Ee(l, this.toBBox), n ? t[n - 1].children.push(l) : this._splitRoot(o, l);
  }
  _splitRoot(t, n) {
    this.data = Se([t, n]), this.data.height = t.height + 1, this.data.leaf = !1, Ee(this.data, this.toBBox);
  }
  _chooseSplitIndex(t, n, o) {
    let i, r = 1 / 0, s = 1 / 0;
    for (let l = n; l <= o - n; l++) {
      const a = Pe(t, 0, l, this.toBBox), c = Pe(t, l, o, this.toBBox), u = Xi(a, c), f = ft(a) + ft(c);
      u < r ? (r = u, i = l, s = f < s ? f : s) : u === r && f < s && (s = f, i = l);
    }
    return i || o - n;
  }
  // sorts node children by the best axis for split
  _chooseSplitAxis(t, n, o) {
    const i = t.leaf ? this.compareMinX : Pi, r = t.leaf ? this.compareMinY : Di, s = this._allDistMargin(t, n, o, i), l = this._allDistMargin(t, n, o, r);
    s < l && t.children.sort(i);
  }
  // total margin of all possible split distributions where each node is at least m full
  _allDistMargin(t, n, o, i) {
    t.children.sort(i);
    const r = this.toBBox, s = Pe(t, 0, n, r), l = Pe(t, o - n, o, r);
    let a = He(s) + He(l);
    for (let c = n; c < o - n; c++) {
      const u = t.children[c];
      De(s, t.leaf ? r(u) : u), a += He(s);
    }
    for (let c = o - n - 1; c >= n; c--) {
      const u = t.children[c];
      De(l, t.leaf ? r(u) : u), a += He(l);
    }
    return a;
  }
  _adjustParentBBoxes(t, n, o) {
    for (let i = o; i >= 0; i--)
      De(n[i], t);
  }
  _condense(t) {
    for (let n = t.length - 1, o; n >= 0; n--)
      t[n].children.length === 0 ? n > 0 ? (o = t[n - 1].children, o.splice(o.indexOf(t[n]), 1)) : this.clear() : Ee(t[n], this.toBBox);
  }
}
function Bi(e, t, n) {
  if (!n) return t.indexOf(e);
  for (let o = 0; o < t.length; o++)
    if (n(e, t[o])) return o;
  return -1;
}
function Ee(e, t) {
  Pe(e, 0, e.children.length, t, e);
}
function Pe(e, t, n, o, i) {
  i || (i = Se(null)), i.minX = 1 / 0, i.minY = 1 / 0, i.maxX = -1 / 0, i.maxY = -1 / 0;
  for (let r = t; r < n; r++) {
    const s = e.children[r];
    De(i, e.leaf ? o(s) : s);
  }
  return i;
}
function De(e, t) {
  return e.minX = Math.min(e.minX, t.minX), e.minY = Math.min(e.minY, t.minY), e.maxX = Math.max(e.maxX, t.maxX), e.maxY = Math.max(e.maxY, t.maxY), e;
}
function Pi(e, t) {
  return e.minX - t.minX;
}
function Di(e, t) {
  return e.minY - t.minY;
}
function ft(e) {
  return (e.maxX - e.minX) * (e.maxY - e.minY);
}
function He(e) {
  return e.maxX - e.minX + (e.maxY - e.minY);
}
function Yi(e, t) {
  return (Math.max(t.maxX, e.maxX) - Math.min(t.minX, e.minX)) * (Math.max(t.maxY, e.maxY) - Math.min(t.minY, e.minY));
}
function Xi(e, t) {
  const n = Math.max(e.minX, t.minX), o = Math.max(e.minY, t.minY), i = Math.min(e.maxX, t.maxX), r = Math.min(e.maxY, t.maxY);
  return Math.max(0, i - n) * Math.max(0, r - o);
}
function ut(e, t) {
  return e.minX <= t.minX && e.minY <= t.minY && t.maxX <= e.maxX && t.maxY <= e.maxY;
}
function Fe(e, t) {
  return t.minX <= e.maxX && t.minY <= e.maxY && t.maxX >= e.minX && t.maxY >= e.minY;
}
function Se(e) {
  return {
    children: e,
    height: 1,
    leaf: !0,
    minX: 1 / 0,
    minY: 1 / 0,
    maxX: -1 / 0,
    maxY: -1 / 0
  };
}
function qt(e, t, n, o, i) {
  const r = [t, n];
  for (; r.length; ) {
    if (n = r.pop(), t = r.pop(), n - t <= o) continue;
    const s = t + Math.ceil((n - t) / o / 2) * o;
    hn(e, s, t, n, i), r.push(t, s, s, n);
  }
}
const Ri = () => {
  const e = new Oi(), t = /* @__PURE__ */ new Map(), n = () => [...t.values()], o = () => {
    e.clear(), t.clear();
  }, i = (f) => {
    if (!qe(f)) return;
    const { minX: g, minY: h, maxX: m, maxY: y } = f.selector.geometry.bounds, T = { minX: g, minY: h, maxX: m, maxY: y, target: f };
    e.insert(T), t.set(f.annotation, T);
  }, r = (f) => {
    if (!qe(f)) return;
    const g = t.get(f.annotation);
    g && e.remove(g), t.delete(f.annotation);
  };
  return {
    all: n,
    clear: o,
    getAt: (f, g) => {
      const m = e.search({
        minX: f,
        minY: g,
        maxX: f,
        maxY: g
      }).map((y) => y.target).filter((y) => y.selector.type === W.RECTANGLE || In(y.selector, f, g));
      if (m.length > 0)
        return m.sort((y, T) => mt(y.selector) - mt(T.selector)), m[0];
    },
    getIntersecting: (f, g, h, m) => e.search({
      minX: f,
      minY: g,
      maxX: f + h,
      maxY: g + m
    }).map((y) => y.target),
    insert: i,
    remove: r,
    set: (f, g = !0) => {
      g && o();
      const h = f.reduce((m, y) => {
        if (qe(y)) {
          const { minX: T, minY: p, maxX: w, maxY: _ } = y.selector.geometry.bounds;
          return [...m, { minX: T, minY: p, maxX: w, maxY: _, target: y }];
        } else
          return m;
      }, []);
      h.forEach((m) => t.set(m.target.annotation, m)), e.load(h);
    },
    size: () => e.all().length,
    update: (f, g) => {
      r(f), i(g);
    }
  };
}, Ci = (e) => {
  const t = so(), n = Ri(), o = qn(t, e.userSelectAction), i = Wn(t), r = uo();
  return t.observe(({ changes: a }) => {
    n.set((a.created || []).map((c) => c.target), !1), (a.deleted || []).forEach((c) => n.remove(c.target)), (a.updated || []).forEach(({ oldValue: c, newValue: u }) => n.update(c.target, u.target));
  }), {
    store: {
      ...t,
      getAt: (a, c) => {
        const u = n.getAt(a, c);
        return u ? t.getAnnotation(u.annotation) : void 0;
      },
      getIntersecting: (a, c, u, f) => n.getIntersecting(a, c, u, f).map((g) => t.getAnnotation(g.annotation))
    },
    selection: o,
    hover: i,
    viewport: r
  };
}, Ni = (e) => {
  const t = Ci(e);
  return {
    ...t,
    store: lo(t.store)
  };
}, Ui = (e) => {
  let t, n;
  if (e.nodeName === "CANVAS")
    t = e, n = t.getContext("2d", { willReadFrequently: !0 });
  else {
    const i = e;
    t = document.createElement("canvas"), t.width = i.width, t.height = i.height, n = t.getContext("2d", { willReadFrequently: !0 }), n.drawImage(i, 0, 0, i.width, i.height);
  }
  let o = 0;
  for (let i = 1; i < 10; i++)
    for (let r = 1; r < 10; r++) {
      const s = Math.round(r * t.width / 10), l = Math.round(i * t.height / 10), a = n.getImageData(s, l, 1, 1).data, c = (0.299 * a[0] + 0.587 * a[1] + 0.114 * a[2]) / 255;
      o += c;
    }
  return o / 81;
}, Vi = (e) => {
  const t = Ui(e), n = t > 0.6 ? "dark" : "light";
  return console.log(`[Annotorious] Image brightness: ${t.toFixed(1)}. Setting ${n} theme.`), n;
}, Kt = (e, t, n) => t.setAttribute("data-theme", n === "auto" ? Vi(e) : n), Gi = (e, t) => ({
  ...e,
  drawingEnabled: e.drawingEnabled === void 0 ? t.drawingEnabled : e.drawingEnabled,
  drawingMode: e.drawingMode || t.drawingMode,
  userSelectAction: e.userSelectAction || t.userSelectAction,
  theme: e.theme || t.theme
}), Jt = typeof navigator > "u" ? !1 : navigator.userAgent.indexOf("Mac OS X") !== -1, ji = (e, t) => {
  const n = t || document, o = (s) => {
    const l = s;
    l.key === "z" && l.ctrlKey ? e.undo() : l.key === "y" && l.ctrlKey && e.redo();
  }, i = (s) => {
    const l = s;
    l.key === "z" && l.metaKey && (l.shiftKey ? e.redo() : e.undo());
  }, r = () => {
    Jt ? n.removeEventListener("keydown", i) : n.removeEventListener("keydown", o);
  };
  return Jt ? n.addEventListener("keydown", i) : n.addEventListener("keydown", o), {
    destroy: r
  };
}, Wi = (e, t = {}) => {
  if (!e)
    throw "Missing argument: image";
  const n = typeof e == "string" ? document.getElementById(e) : e, o = Gi(t, {
    drawingEnabled: !0,
    drawingMode: "drag",
    userSelectAction: rn.EDIT,
    theme: "light"
  }), i = Ni(o), { selection: r, store: s } = i, l = fo(s), a = ho(
    i,
    l,
    o.adapter,
    o.autoSave
  ), c = document.createElement("DIV");
  c.style.position = "relative", c.style.display = "inline-block", n.style.display = "block", n.parentNode.insertBefore(c, n), c.appendChild(n);
  const u = ji(l);
  let f = Eo();
  Kt(n, c, o.theme);
  const g = new ki({
    target: c,
    props: {
      drawingEnabled: !!o.drawingEnabled,
      image: n,
      preferredDrawingMode: o.drawingMode,
      state: i,
      style: o.style,
      user: f
    }
  });
  g.$on("click", (D) => {
    const { originalEvent: E, annotation: A } = D.detail;
    A ? r.userSelect(A.id, E) : r.isEmpty() || r.clear();
  });
  const h = mo(i, l, o.adapter), m = () => {
    g.$destroy(), c.parentNode.insertBefore(n, c), c.parentNode.removeChild(c), u.destroy(), l.destroy();
  }, y = () => f, T = (D, E, A) => si(D, E, A), p = (D, E) => Ho(D, E), w = (D) => {
    if (!un(D))
      throw `No drawing tool named ${D}`;
    g.$set({ toolName: D });
  }, _ = (D) => g.$set({ drawingEnabled: D }), b = (D) => {
    console.warn("Filter not implemented yet");
  }, I = (D) => g.$set({ style: D }), U = (D) => Kt(n, c, D), V = (D) => {
    f = D, g.$set({ user: D });
  }, G = (D) => (
    // @ts-ignore
    g.$set({ visible: D })
  );
  return {
    ...h,
    destroy: m,
    getUser: y,
    listDrawingTools: fn,
    on: a.on,
    off: a.off,
    registerDrawingTool: T,
    registerShapeEditor: p,
    setDrawingEnabled: _,
    setDrawingTool: w,
    setFilter: b,
    setStyle: I,
    setTheme: U,
    setUser: V,
    setVisible: G,
    element: c,
    state: i
  };
};
export {
  cn as Editor,
  Jo as EditorMount,
  Be as Handle,
  Fi as IdentityTransform,
  Oo as PolygonEditor,
  jo as RectangleEditor,
  Pn as RectangleUtil,
  ei as RubberbandRectangle,
  ki as SVGAnnotationLayer,
  W as ShapeType,
  Zo as ToolMount,
  Hi as W3CImageFormat,
  bi as addEventListeners,
  Qe as boundsFromPoints,
  mt as computeArea,
  Wi as createImageAnnotator,
  Ci as createImageAnnotatorState,
  _i as createSVGTransform,
  Ni as createSvelteImageAnnotatorState,
  Vi as detectTheme,
  lt as distance,
  Do as enableResponsive,
  Gi as fillDefaults,
  zo as getEditor,
  dn as getSVGPoint,
  un as getTool,
  ji as initKeyboardCommands,
  In as intersects,
  Ze as isImageAnnotation,
  qe as isImageAnnotationTarget,
  Jt as isMac,
  Yo as isTouch,
  fn as listDrawingTools,
  Dn as parseFragmentSelector,
  Un as parseSVGSelector,
  To as parseW3CImageAnnotation,
  Ho as registerEditor,
  _t as registerShapeUtil,
  si as registerTool,
  Ui as sampleBrightness,
  Yn as serializeFragmentSelector,
  Vn as serializeSVGSelector,
  Mo as serializeW3CImageAnnotation,
  Kt as setTheme
};
//# sourceMappingURL=annotorious.es.js.map
