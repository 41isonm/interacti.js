name: Executar PowerShell e Exportar Procedures

on:
  push:
    branches:
      - main

jobs:
  run_powershell:
    runs-on: windows-latest  # Usa o runner do Windows, onde o PowerShell é nativo

    steps:
      - name: Check out o repositório
        uses: actions/checkout@v2  # Faz o checkout do código

      - name: Executar comandos PowerShell
        shell: pwsh  # Especifica que o shell a ser usado será o PowerShell (pwsh para PowerShell Core)
        run: |
          Write-Host "Executando PowerShell no GitHub Actions!"
          $data = Get-Date
          Write-Host "Data atual: $data"
          
          # Listar arquivos do repositório
          Write-Host "Listando os arquivos do repositório:"
          Get-ChildItem -Path . | ForEach-Object { Write-Host $_.Name }
          # Credenciais FTP
          $ftpHost = "ftp://actidesenvolvimento.com"
          $ftpUser = "u787840538.actidesenvolvimento.com.br"
          $ftpPwd = "P@ssw0rd013459"
          
          # Diretório local com os arquivos do repositório
          $sourceDir = "."
          # Função para enviar arquivos para o FTP
          function Upload-ToFtp($sourceFile, $ftpUri, $ftpUser, $ftpPwd) {
              $ftpRequest = [System.Net.FtpWebRequest]::Create($ftpUri)
              $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::UploadFile
              $ftpRequest.Credentials = New-Object System.Net.NetworkCredential($ftpUser, $ftpPwd)
              $ftpRequest.UseBinary = $true
              $ftpRequest.KeepAlive = $false
              $fileContents = [System.IO.File]::ReadAllBytes($sourceFile)
              $ftpRequest.ContentLength = $fileContents.Length
              $requestStream = $ftpRequest.GetRequestStream()
              $requestStream.Write($fileContents, 0, $fileContents.Length)
              $requestStream.Close()
              
              Write-Host "Arquivo $sourceFile enviado com sucesso!"
          }
          # Enviar todos os arquivos do repositório para o FTP na pasta teste_deploy
          $destinationDir = "/teste_deploy"  # Definir o diretório de destino no FTP
          foreach ($file in Get-ChildItem -Path $sourceDir -File) {
              $ftpUri = "ftp://actidesenvolvimento.com$destinationDir/$($file.Name)"
              Write-Host "Enviando $($file.Name) para $ftpUri"
              Upload-ToFtp $file.FullName $ftpUri $ftpUser $ftpPwd
          }
          Write-Host "Arquivos enviados para o servidor FTP com sucesso!"

  export_mysql_procedures:
    runs-on: ubuntu-latest  # Usa o runner do Linux para executar o script MySQL

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Export MySQL Procedures
        env:
          MYSQL_HOST: 179.188.16.101
          MYSQL_USER: cabr_pdv
          MYSQL_PASSWORD: P@ssw0rd013459
          MYSQL_DATABASE: cabr_pdv
        run: |
          # Instalar cliente MySQL
          sudo apt-get update && sudo apt-get install -y mysql-client

          # Diretório para salvar as procedures
          EXPORT_DIR="procedures"
          mkdir -p $EXPORT_DIR

          # Obter lista de procedures
          mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -D $MYSQL_DATABASE -N -e "
          SELECT ROUTINE_NAME 
          FROM INFORMATION_SCHEMA.ROUTINES 
          WHERE ROUTINE_TYPE = 'PROCEDURE' AND ROUTINE_SCHEMA = '$MYSQL_DATABASE';
          " > procedure_list.txt

          # Exportar cada procedure para um arquivo individual
          while read procedure; do
            echo "Exportando procedure: $procedure"
            mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -D $MYSQL_DATABASE -N -e "
            SHOW CREATE PROCEDURE $procedure\G" > "$EXPORT_DIR/$procedure.sql"
          done < procedure_list.txt

          # Remover arquivo temporário
          rm procedure_list.txt

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          git add procedures
          if git diff --cached --quiet; then
            echo "Nenhuma alteração nas procedures."
          else
            git commit -m "Atualização automática das procedures: $(date)"
            git push
          fi
